---
title: "Representativitet i byindeks, appendikser"
format: 
  html:
    css: svv.css
    number-sections: true
    toc: true
    toc-location: left
    toc-title: "Innhold"
    toc-expand: true
    toc-depth: 2
    df-print: paged
    self-contained: true
crossref:
  fig-title: Figur
  tbl-title: Tabell
  title-delim: .
  fig-prefix: figur
  tbl-prefix: tabell
editor: source
knitr: 
  opts_chunk: 
    echo: false
---


```{r}
#| label: setup
#| include: false
#| echo: false
#| warning: false
#| message: false
  
base::Sys.setlocale(locale = "nb.utf8")
svv_background_color <- "#F5F5F5"

library(tidyverse)
library(patchwork)
library(flextable)
library(vcd)
library(sf)
#library(sfnetworks)
library(igraph)
library(tidygraph)
library(htmltools)
library(leaflet)
library(RColorBrewer)
library(leaflet)

source("H:/Programmering/R/byindeks/leaflet_nvdb_map_setup.R")
source("H:/Programmering/R/byindeks/traffic_link_functions.R")
source("H:/Programmering/R/byindeks/index_report_functions.R")

flextable::set_flextable_defaults(
  #font.size = 8,
  #padding.bottom = .2,
  #padding.top = .4,
  decimal.mark = ",",
  big.mark = " ",
  na_str = ""
)
```

```{r}
#| label: data

this_date <- lubridate::today()
this_date_string <- 
  base::paste0(
    lubridate::mday(this_date), 
    ". ", 
    lubridate::month(this_date, label = TRUE, abbr = FALSE), 
    " ", 
    lubridate::year(this_date)
  )

rtm_trd <- readr::read_rds("representativity/rtm_20_22_trondheim.rds")
rtm_trd_index <- readr::read_rds("representativity/rtm_20_22_trondheim_index.rds")
rtm_random_samples <- readr::read_rds("representativity/rtm_random_samples.rds")

random_samples_stats <-
  rtm_random_samples |> 
  dplyr::summarise(
    n = n(),
    mean_index_p = mean(tw_area_index_p),
    median_index_p = median(tw_area_index_p),
    min_index_p = min(tw_area_index_p),
    max_index_p = max(tw_area_index_p),
    mean_sd = mean(weighted_sd_p),
    sd = sd(tw_area_index_p),
    sd_test = sqrt((1/999) * sum((tw_area_index_p - mean(tw_area_index_p))^2)),
    ci_lower = mean_index_p - 1.96 * sd,
    ci_upper = mean_index_p + 1.96 * sd
  )

rtm_random_samples_ci <- 
  paste0(
    "(", 
    base::sprintf("%.1f", random_samples_stats$ci_lower) |> stringr::str_replace("\\.",","),
    ", ", 
    base::sprintf("%.1f", random_samples_stats$ci_upper) |> stringr::str_replace("\\.",","),
    ")"
  )

links_nj <- readr::read_rds("representativity/link_population_nj.rds")
links_nj_whole <- readr::read_rds("representativity/link_population_nj_whole.rds")
urban_area_nj <- readr::read_rds("representativity/urban_area_nj.rds")
agreement_area_nj <- readr::read_rds("representativity/agreement_area_nj.rds")

links_bergen <- readr::read_rds("traffic_link_pop/links_bergen.rds")
urban_area_bergen <- readr::read_rds("representativity/urban_area_bergen.rds")
municipality_polygon_bergen <- readr::read_rds("traffic_link_pop/municipality_polygon_bergen.rds")

links_trondheim <- readr::read_rds("traffic_link_pop/links_trondheim.rds")
urban_area_trondheim <- readr::read_rds("representativity/urban_area_trondheim.rds")
municipality_polygon_trondheim <- readr::read_rds("traffic_link_pop/municipality_polygon_trondheim.rds")

# Calculation examples
# Bergen
indexes_examples_bergen <-
  readr::read_rds("representativity/new_index_examples_bergen.rds")

indexes_official_bergen <-
  readr::read_rds(file = paste0("data_indexpoints_tidy/rolling_indices_8952.rds")) |>
  dplyr::bind_rows()

indexes_comparison_bergen <-
  dplyr::bind_rows(
    indexes_examples_bergen[[1]] |> 
      dplyr::mutate(
        version = "old"
      ),
    indexes_examples_bergen[[2]] |> 
      dplyr::mutate(
        version = "new"
      ),
    indexes_official_bergen |> 
      dplyr::mutate(
        version = "official"
      )
  )

error_comparison_bergen <-
  dplyr::bind_rows(
    indexes_examples_bergen[[1]] |> 
      dplyr::mutate(
        version = "old",
        em = (ci_upper - ci_lower) / 2
      ) |> 
      dplyr::select(
        window, month_object, version, em
      ),
    indexes_examples_bergen[[2]] |> 
      dplyr::mutate(
        version = "new_sample_fpc"
      ) |> 
      dplyr::select(
        window, month_object, version, em = em_selection
      ),
    indexes_examples_bergen[[2]] |> 
      dplyr::mutate(
        version = "new_model"
      ) |> 
      dplyr::select(
        window, month_object, version, em = em_model
      ),
    indexes_examples_bergen[[2]] |> 
      dplyr::mutate(
        version = "new_bs_bca",
        em = (bs_bca_upper - bs_bca_lower) / 2
      ) |> 
      dplyr::select(
        window, month_object, version, em
      ),
    indexes_official_bergen |> 
      dplyr::mutate(
        version = "official",
        em = (ci_upper - ci_lower) / 2
      ) |> 
      dplyr::select(
        window, month_object, version, em
      )
  )

# Trondheim
indexes_examples_trondheim <-
  readr::read_rds("representativity/new_index_examples_trondheim.rds")

indexes_official_trondheim <-
  readr::read_rds(file = paste0("data_indexpoints_tidy/rolling_indices_960.rds")) |>
  dplyr::bind_rows()

indexes_comparison_trondheim <-
  dplyr::bind_rows(
    indexes_examples_trondheim[[1]] |> 
      dplyr::mutate(
        version = "old"
      ),
    indexes_examples_trondheim[[2]] |> 
      dplyr::mutate(
        version = "new"
      ),
    indexes_official_trondheim |> 
      dplyr::mutate(
        version = "official"
      )
  )

error_comparison_trondheim <-
  dplyr::bind_rows(
    indexes_examples_trondheim[[1]] |> 
      dplyr::mutate(
        version = "old",
        em = (ci_upper - ci_lower) / 2
      ) |> 
      dplyr::select(
        window, month_object, version, em
      ),
    indexes_examples_trondheim[[2]] |> 
      dplyr::mutate(
        version = "new_sample_fpc"
      ) |> 
      dplyr::select(
        window, month_object, version, em = em_selection
      ),
    indexes_examples_trondheim[[2]] |> 
      dplyr::mutate(
        version = "new_model"
      ) |> 
      dplyr::select(
        window, month_object, version, em = em_model
      ),
    indexes_examples_trondheim[[2]] |> 
      dplyr::mutate(
        version = "new_bs_bca",
        em = (bs_bca_upper - bs_bca_lower) / 2
      ) |> 
      dplyr::select(
        window, month_object, version, em
      ),
    indexes_official_trondheim |> 
      dplyr::mutate(
        version = "official",
        em = (ci_upper - ci_lower) / 2
      ) |> 
      dplyr::select(
        window, month_object, version, em
      )
  )

```


# Innledning
Dette dokumentet er et supplement til notatet [Representativitet i byindeks](https://vegvesen.sharepoint.com/:w:/r/sites/arb-Trafikkdataogtrafikkutviklingiby/Delte%20dokumenter/General/Arbeidsgruppa/Oppgaver/Representativitet%20i%20byindeks/Representativitet%20i%20byindeks.docx?d=w8fb786036594485bbb5d282a07b9db78&csf=1&web=1&e=p58ZHf) og inneholder detaljer om de utforskende dataanalysene som ligger til grunn for vurderingene som er beskrevet der.

Sist oppdatert `r this_date_string`. 

Kontaktperson er Snorre Hansen, Statens vegvesen (Divisjon for Transport og samfunn, Avdeling for Transportutvikling, Seksjon for Veg- og transportteknologi).


## Bakgrunn
Utgangspunktet for indeksmetodikken er å se på vegnettet som en populasjon som det gjøres et utvalg fra. Individene i populasjonen er trafikklenker, som er vegstrekninger fra kryss til kryss som har homogen trafikkmengde på en tidsoppløsning som er minst et døgn.

Arbeidet med representativitet er gjort før det er gjort en nærmere analyse på selve beregningsmetoden til byindeksen. Representativitet og beregningsmetode henger tett sammen, men det antas her at metodikken for beregning av byindeks er som et vektet gjennomsnitt av trafikklenkenes endring i trafikkarbeid, der trafikkarbeidet er vektene.


{{< include index_representativeness_known_pop.qmd >}}


# Utvalgsmetodikk
I Trafikkdatasystemet er det generert opp trafikklenker fra det digitale vegnettet i NVDB, som så er beriket med flere aktuelle variabler:

- vegkategori
- lenkelengde
- trafikkmengde (ÅDT)
- trafikkarbeid
- minste og største antall kjørefelt
- laveste og høyeste fartsgrense
- funksjonsklasse
- funksjonell vegklasse

I tillegg er det hentet inn datasett fra SSB i form av polygoner med informasjon om:

- tettsteder
- antall næringsvirksomheter
- antall ansatte
- antall innbyggere

Verdiene for disse størrelsene er tilknyttet de trafikklenkene som overlapper med polygonene. 

Trafikklenkene er lett tilgjengelige via API og eksportfunksjonalitet i Trafikkdatasystemet og holdes kontinuerlig oppdatert.

De regionale transportmodellene har egenskaper på sine trafikklenker som kunne være aktuelle variabler i indekssammenheng:

- fordeling av reiselengder
- fordeling av reisehensikt
- andel turer

I byindekssammenheng er det kun relevant å se på reiser utført av bilfører. Verdiene finnes i hver enkelt delområdemodell, men det er ikke et felles sted å hente disse variablene fra, noe som gjør de mindre tilgjengelig og dermed uaktuelle for videre bruk i byindekssammenheng.


## Forklaringsvariabler
For å finne ut om noen av de tilgjengelige variablene kan brukes til å forklare størrelsen og variasjonen til trafikklenkeindeksene, er det gjennomført en korrelasjonanalyse. For kategoriske forklaringsvariabler kan vi visuelt vurdere variasjonen ved hjelp av boksplott, mens for numeriske ser vi på Spearmans korrelasjonskoeffisient (som tar høyde for eventuelle ikke-lineære sammenhenger).

Vi finner at ingen av de tilgjengelige variablene har noen tydelig korrelasjon med trafikklenkeindeksen.


## Minste antall punkt
Tar hensyn til at populasjonens størrelse er kjent.



# Mål for representativitet
Føyningsmål ("goodness of fit") fra for eksempel Kolmogorov-Smirnov-testen gir ett tall som er den største avstanden mellom to fordelinger. Et avstandsmål som summerer opp "hele" avviket mellom to fordelinger er å foretrekke.


## Fordeling av trafikklenker
Trafikklenkenes trafikkarbeid kan fordeles etter funksjonsklasse. Ved å sammenligne utvalgets fordeling med populasjonens fordeling, vil graden av likhet være et mål på representativitet. Her er det sett på to ulike måter å beregne forskjellen på. Den ene måten kalles "total variation distance" (TVD) og beregnes ved først å finne den absolutte forskjellen mellom utvalget $S$ og populasjonen $P$ sine andeler trafikkarbeid for hver funksjonsklasse $k$, for så å summere disse for alle funksjonsklassene og til slutt dele på to. Matematisk kan dette skrives slik:

$$
\delta(P, S) = \frac{1}{2} \sum_k \left| P(k) - S(k) \right|.
$$ {#eq-tvd}

Den andre metoden er kalt Hellingers distanse og er definert slik: 

$$
H(P, S) = \frac{1}{\sqrt{2}} \sqrt{\sum_k \left( \sqrt{P(k)} - \sqrt{S(k)} \right)^2}.
$$ {#eq-hellinger}

Felles for begge måtene er at om de to fordelingene er helt like, så blir verdien null. TVD er den enkleste og mest intuitive, så den vil bli foretrukket.


## Geografisk spredning
Ved å se på vegnettet som en sammenhengende grafstruktur, kan det beregnes grafparametre som beskriver dekningen og spredningen av trafikklenker. En utfordring med slike metrikker er at de må ta hensyn til at vegnettet endrer seg over tid.


### Gjennomsnittlig avstand til byindekspunkt
Et relevant mål er den gjennomsnittlige korteste avstanden fra trafikklenkene som ikke er med i utvalget $(P-S)$ til de som er utvalgt $(S)$. Dette sier noe om hvor spredt punktene ligger. Denne avstanden er definert som

$$
\bar{d}(P, S) = \frac{1}{P - S} \sum_{p \in P - S} \min_{s \in S} d(p, s),
$$ {#eq-closeness_representation}

hvor $d(p, s)$ er den korteste vegen fra trafikklenke $p$ til trafikklenke $s$. For å beregne dette er det nødvendig å linjetransformere grafen slik at trafikklenker blir representert som noder. I grafsammenheng er avstander kun målt i antall lenker som må traverseres for å komme fra en node til en annen. Det er en forutsetning at vegnettet er sammenhengende for at denne verdien skal kunne beregnes.

Med tanke på representativitet er det ingen naturlig grenseverdi for denne størrelsen, men den kan sammenlignes over tid. Det beste resultatet gitt $n$ punkt kan formuleres som et optimeringsproblem, som vi kan sammenligne det faktiske utvalget med. Helt generelt kan det være litt kunstig å sette et fast antall punkt, men dette kan argumenteres ut fra økonomiske hensyn. Det er således mulig å beregne hvor mye bedre representativiteten blir dersom antallet punkt øker, og tilsvarende hvor mye verre det blir om antallet minker. Metoden kan også brukes til å simulere utvalg, og peke ut den beste posisjonen til punkt $n+1$. Imidlertid er det ikke opplagt hvordan en slik beregning kan ta hensyn til fordeling av trafikkarbeid i funksjonsklasser.


### Andel utvalgte trafikklenker inkludert nærmeste nabolenker
Et annet potensielt mål for representativitet i form av en metrikk på en graf, er andel utvalgte trafikklenker inkludert nærmeste nabolenker. Dette impliserer at det er en romlig korrelasjon mellom nabolenker, men den er ikke påviselig. Derfor anses ikke denne metrikken som aktuell.


# Eksempel med Nord-Jæren
Nord-Jæren egner seg godt som eksempel av flere grunner: 

- En byindeks med historikk tilbake til referanseåret 2017 gir godt grunnlag for å se på hvordan representativiteten har variert over tid.
- De ytre områdene av kommunene er ikke bymessige, som gir en mulighet til å tydeliggjøre forskjellen i hvordan områdedefinisjonen påvirker byindeksen.
- Det er ingen kommunale veger som bør dekkes av byindeksen og de tilgjengelige trafikklenkene utgjør derfor et komplett vegnett.
- Det er mange trafikkregistreringspunkter i området, og det er blitt flere etter 2017. Dagens byindeks benytter relativt få punkter mot det som er tilgjengelig i dag. Hvordan et økende antall punkter kan benyttes utover i en tidsserie er et eget tema, men her er det interessant å sammenligne representativiteten til ulike utvalg.


## Områdeavgrensing
Hvilket område byindeksen skal være representativ for er viktig med tanke på hvilke byindekspunkt som skal inngå i datagrunnlaget. En mer begrenset populasjon vil i teorien bidra til mindre usikkerhet.


### Avtaleområdet
Avtaleområdet omfatter kommunene Randaberg og Sola slik de er i dag, samt de kommunegrensene som gjaldt for Stavanger og Sandnes fram til 2019, altså før kommunesammenslåinger som gjaldt fra 1. januar 2020.

Dersom alle trafikklenker i avtaleområdet tas med, blir trafikklenkepopulasjonen som vist i @fig-map_nj_whole.

```{r}
#| label: fig-map_nj_whole
#| message: false
#| fig-cap: !expr map_caption

map_links_with_function_class(links_nj_whole) |> 
  addPolygons(
    data = agreement_area_nj,
    weight = 3,
    opacity = 0.3,
    fill = FALSE
  )
```


## Byområdet
For å begrense populasjonen til de mer bymessige og sentrale delene, kan vi se på tettstedsområdet definert av Statistisk sentralbyrå. I utgangspunktet beholdes kun trafikklenker som ligger innenfor eller overlapper med dette området, men de  viktigste vegene mellom de ulike delområdene må også inkluderes. I tillegg utelates alle trafikklenker med funksjonsklasse E, da disse er av mindre betydning. I @fig-map_nj vises alle trafikklenker som er definert som populasjonen i det byområdet. 

```{r}
#| label: fig-map_nj
#| message: false
#| fig-cap: !expr map_caption

map_links_with_function_class(links_nj) |> 
  addPolygons(
    data = urban_area_nj,
    weight = 3,
    opacity = 0.3,
    fill = FALSE
  )
```


## Trafikkarbeidsfordeling i funksjonsklasser
I @fig-function_class_nj vises hvordan trafikkarbeidet til trafikklenkene i byområdet fordeler seg i funksjonsklassene.

```{r}
#| label: fig-function_class_nj
#| fig-cap: "Fordeling av funksjonsklasse i populasjon og utvalg." 
#| message: false
#| warning: false

visualize_function_class_distribution(links_nj)
```

</br>

Utvalget av lenker med trafikkregistrering består her av alle kontinuerlige punkt som eksisterer per 2024. I en konkret byindeksberegning er det neppe mulig å bruke alle. Hvilke punkt som kan være med blir begrenset av:

- tilgjengelighet på data av god nok kvalitet
- hvilke år som skal sammenlignes (blant annet referanseår)
- andel gjennomgangstrafikk
- hva som er god nok geografisk spredning 
- god nok fordeling på funksjonsklasse

I @tbl-trp_count_nj oppsummeres andel trafikkarbeid i populasjonen og det maksimale, teoretiske utvalget.

```{r}
#| label: tbl-trp_count_nj
#| tbl-cap:  "Statistikk for trafikklenker på Nord-Jæren."

table_link_statistics(links_nj)
```


## Populasjonens betydning
Hvilket område byindeksen skal gjelde for har noe å si for representativiteten. Ved å se på utvalget med de 24 trafikklenkene som har de opprinnelige byindekspunktene, kan vi sammenligne representativiteten for disse mellom en populasjon som dekker hele avtaleområdet og en populasjon som kun dekker selve byområdet.

I @fig-function_class_nj_24 sammenlignes trafikkarbeidsfordelingen til de 23 utvalgte trafikklenkene med byområdets populasjon (punktet ved Rege faller utenfor byområdet).

```{r}
#| label: fig-function_class_nj_24
#| fig-cap: "Fordeling av funksjonsklasse i populasjon for byområdet og utvalg med 24 punkt." 
#| message: false
#| warning: false

links_nj |> 
  dplyr::mutate(
    point_id =
      dplyr::case_when(
        city_trp ~ point_id,
        TRUE ~ NA_character_
      )
  ) |> 
  visualize_function_class_distribution()
```

I @fig-function_class_nj_24_whole vises tilsvarende sammenligning med populasjonen for hele avtaleområdet. 

```{r}
#| label: fig-function_class_nj_24_whole
#| fig-cap: "Fordeling av funksjonsklasse i populasjon for avtaleområdet og utvalg med 24 punkt." 
#| message: false
#| warning: false

links_nj_whole |> 
  dplyr::mutate(
    point_id =
      dplyr::case_when(
        city_trp ~ point_id,
        TRUE ~ NA_character_
      )
  ) |> 
  visualize_function_class_distribution()
```

Forskjellene er ikke så store, men for avtaleområdet er det en flere veger med funksjonsklasse D og E. Da det ikke finnes nok trafikkregistreringspunkter på disse vegene, må det etableres nye dersom disse skal representeres godt i byindeksen. Vi ser også ut fra fordelingen at klasse E utgjør en veldig liten andel av det totale trafikkarbeidet, så byindekspunkter her vil bidra veldig lite til byindeksen. Tilsvarende er det en betydelig andel trafikkarbeid i klasse D i populasjonen, men disse er ikke representert i utvalget av 24 punkt. Her finnes det noen punkt, og ved å inkludere iallfall noen av disse, vil representativiteten øke.

Som et objektivt mål på representativiteten kan forskjellen mellom trafikkarbeidsfordelingen i funksjonsklasser for henholdsvis populasjon og utvalg beregnes. Det er her brukt to ulike måter å beregne forskjellen på, som vist i @tbl-stat_distance_nj_24. De to metodene som er brukt her er "total variation distance" (TVD) og Hellingers distanse. Felles for begge målene er at om fordelingene er like, så blir verdien null.

```{r}
#| label: tbl-stat_distance_nj_24
#| tbl-cap:  "Sammenligning av likheten i populasjon</br>og utvalg med et utvalg på 24 punkt."

links_nj_whole_function_class_stats <-
  links_nj_whole |>
  dplyr::mutate(
    point_id =
      dplyr::case_when(
        city_trp ~ point_id,
        TRUE ~ NA_character_
      )
  ) |>
  summarise_link_population_by_function_class() |>
  calculate_statistical_distance() |>
  dplyr::mutate(
    population = "Avtaleområdet",
    selection = "24"
  ) |>
  dplyr::relocate(
    population, selection
  )

links_nj_function_class_stats <-
  links_nj |>
  dplyr::mutate(
    point_id =
      dplyr::case_when(
        city_trp ~ point_id,
        TRUE ~ NA_character_
      )
  ) |>
  summarise_link_population_by_function_class() |>
  calculate_statistical_distance() |>
  dplyr::mutate(
    population = "Byområdet",
    selection = "23"
  ) |>
  dplyr::relocate(
    population, selection
  )

dplyr::bind_rows(
  links_nj_whole_function_class_stats,
  links_nj_function_class_stats
) |> 
  table_statistical_distance_comparison()
```

I dette tilfellet med 24 punkt, ser vi at byområdet er bedre representert enn avtaleområdet, og det er som forventet.
 
I @tbl-trp_count_nj_24 oppsummeres andel trafikkarbeid i byområdet og utvalg.

```{r}
#| label: tbl-trp_count_nj_24
#| tbl-cap:  "Statistikk for trafikklenker på Nord-Jæren</br>(byområdet) med utvalg på 23 punkt."

links_nj |> 
  dplyr::mutate(
    point_id =
      dplyr::case_when(
        city_trp ~ point_id,
        TRUE ~ NA_character_
      )
  ) |> 
  table_link_statistics()
```

I @tbl-trp_count_nj_24_whole oppsummeres andel trafikkarbeid i avtaleområdet og utvalg.

```{r}
#| label: tbl-trp_count_nj_24_whole
#| tbl-cap:  "Statistikk for trafikklenker på Nord-Jæren</br>(avtaleområdet) med utvalg på 24 punkt."

links_nj_whole |> 
  dplyr::mutate(
    point_id =
      dplyr::case_when(
        city_trp ~ point_id,
        TRUE ~ NA_character_
      )
  ) |> 
  table_link_statistics()
```

Prosentandelene for antall lenker og trafikkarbeid øker litt med en redusert populasjon.

Gjennomsnittlig avstand fra trafikklenkene som ikke er med i utvalget til de som har byindekspunkt er på 3,8 for byområdet, mens avtaleområdet er denne verdien 3,9.


### Usikkerhet
Populasjonens størrelse har noe å si for dempingen av usikkerheten når vi holder utvalget fast.
https://stats.stackexchange.com/questions/5158/explanation-of-finite-population-correction-factor

### Representativiteten tilbake i tid
Ved å se på hvilke byindekspunkter som har vært med i datagrunnlaget for de månedlige beregningene av tre års glidende indeks, kan vi se hvordan representativiteten har vært over tid. Her er det trafikklenkepopulasjonen for byområdet som er benyttet.



### Konklusjon
Det er flere fordeler med en begrenset og sentral populasjon kontra en komplett populasjon:

- Færre punkter trengs for å få god representativitet
- Usikkerheten i byindeksen blir lavere
- Utvalget punkt som allerede er tatt i bruk ligger stort sett i sentrale deler
- Det trengs ikke etableres nye punkter på de minste vegene (som uansett vil bidra lite til byindeksen, men som for representativitetens skyld burde være med)
- Byindeksen vil i større grad fokusere på de delene av vegnettet hvor trafikkveksten utgjør et reelt problem



## Utvalgets betydning
Vi holder populasjonen fast og varierer utvalget av punkt.

De 24.

De foreslåtte 59.

De mulige 89 fra 2023.


## Simulerte utvalg


## Mål for representativitet over tid
Tidsserier for de historiske indeksverdiene med:

- andel trafikklenker
- dekningsgrad trafikkarbeid
- total variasjonsavstand i trafikkarbeidsfordeling i funksjonsklasser
- gjennomsnittlig avstand til byindekspunkt


# Eksempel med Bergen
Indekstall for Bergen er beregnet med ny metode. Siden byindeksens område er noe snevret inn til de største tettstedene, er ikke alle punkt fra den offisielle indeksen med i regneeksemplene. Det er derfor også regnet ut en indeks med gammel metode for at sammenligningen skal bli rettferdig.

```{r}
#| label: fig-map_bergen
#| message: false
#| fig-cap: !expr map_caption

map_links_with_function_class(links_bergen) |> 
  addPolygons(
    data = municipality_polygon_bergen,
    weight = 3,
    opacity = 0.3,
    fill = FALSE
  ) |>
  addPolygons(
    data = urban_area_bergen,
    weight = 3,
    opacity = 0.3,
    fill = FALSE
  )
```

```{r}
#| label: bergen_examples_12
#| fig_cap: "Sammenligning av indekstall for Bergen, ett års glidende indeks."

visualize_index_examples(indexes_comparison_bergen, "12_months", "Bergen, ett års glidende indeks", "Regneeksempler")
```

```{r}
#| label: bergen_examples_36
#| fig_cap: "Sammenligning av indekstall for Bergen, tre års glidende indeks."

visualize_index_examples(indexes_comparison_bergen, "36_months", "Bergen, tre års glidende indeks", "Regneeksempler")
```

```{r}
#| label: bergen_examples_error_12
#| fig_cap: "Sammenligning av feilmargin i indeksene for Bergen, ett års glidende indeks."

visualize_error_examples(error_comparison_bergen, "12_months", "Bergen, ett års glidende indeks", "Regneeksempler")
```

```{r}
#| label: bergen_examples_error_12_2
#| fig_cap: "Sammenligning av feilmargin i indeksene for Bergen, ett års glidende indeks."

error_comparison_bergen |> 
  dplyr::filter(
    version != "new_bs_bca"
  ) |> 
  visualize_error_examples("12_months", "Bergen, ett års glidende indeks", "Regneeksempler")
```


```{r}
#| label: bergen_examples_error_36_2
#| fig_cap: "Sammenligning av feilmargin i indeksene for Bergen, tre års glidende indeks."

error_comparison_bergen |> 
  dplyr::filter(
    version != "new_bs_bca"
  ) |> 
  visualize_error_examples("36_months", "Bergen, tre års glidende indeks", "Regneeksempler")
```


# Eksempel med Trondheim
```{r}
#| label: fig-map_trd
#| message: false
#| fig-cap: !expr map_caption

map_links_with_function_class(links_trondheim) |> 
  addPolygons(
    data = municipality_polygon_trondheim,
    weight = 3,
    opacity = 0.3,
    fill = FALSE
  ) |>
  addPolygons(
    data = urban_area_trondheim,
    weight = 3,
    opacity = 0.3,
    fill = FALSE
  )
```

```{r}
#| label: trd_examples_12
#| fig_cap: "Sammenligning av indekstall for Trondheim, ett års glidende indeks."

visualize_index_examples(indexes_comparison_trondheim, "12_months", "Trondheim, ett års glidende indeks", "Regneeksempler")
```


```{r}
#| label: trd_examples_36
#| fig_cap: "Sammenligning av indekstall for Trondheim, tre års glidende indeks."

visualize_index_examples(indexes_comparison_trondheim, "36_months", "Trondheim, tre års glidende indeks", "Regneeksempler")
```


## Usikkerhet
Sammenligne feilmarginens størrelse over tid.
```{r}
#| label: trd_examples_error_12
#| fig_cap: "Sammenligning av feilmargin i indeksene for Trondheim, ett års glidende indeks."

visualize_error_examples(error_comparison_trondheim, "12_months", "Trondheim, ett års glidende indeks", "Regneeksempler")
```

```{r}
#| label: trd_examples_error_12_2
#| fig_cap: "Sammenligning av feilmargin i indeksene for Trondheim, ett års glidende indeks."

error_comparison_trondheim |> 
  dplyr::filter(
    version != "new_bs_bca"
  ) |> 
  visualize_error_examples("12_months", "Trondheim, ett års glidende indeks", "Regneeksempler")
```


```{r}
#| label: trd_examples_error_36_2
#| fig_cap: "Sammenligning av feilmargin i indeksene for Trondheim, tre års glidende indeks."

error_comparison_trondheim |> 
  dplyr::filter(
    version != "new_bs_bca"
  ) |> 
  visualize_error_examples("36_months", "Trondheim, tre års glidende indeks", "Regneeksempler")
```


## Representativitet over tid



