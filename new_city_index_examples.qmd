---
title: "Byindeks, regneeksempler"
format: 
  html:
    css: svv.css
    page-layout: full
    number-sections: true
    toc: true
    toc-location: left
    toc-title: "Innhold"
    toc-expand: true
    toc-depth: 2
    df-print: paged
    self-contained: true
crossref:
  fig-title: Figur
  tbl-title: Tabell
  title-delim: .
  fig-prefix: figur
  tbl-prefix: tabell
editor: source
knitr: 
  opts_chunk: 
    echo: false
---


```{r}
#| label: setup
#| include: false
#| echo: false
#| warning: false
#| message: false
  
base::Sys.setlocale(locale = "nb.utf8")
svv_background_color <- "#F5F5F5"

library(tidyverse)
library(patchwork)
library(flextable)
library(vcd)
library(sf)
#library(sfnetworks)
library(igraph)
library(tidygraph)
library(htmltools)
library(leaflet)
library(RColorBrewer)
library(leaflet)

source("H:/Programmering/R/byindeks/leaflet_nvdb_map_setup.R")
source("H:/Programmering/R/byindeks/traffic_link_functions.R")
source("H:/Programmering/R/byindeks/index_report_functions.R")

flextable::set_flextable_defaults(
  #font.size = 8,
  #padding.bottom = .2,
  #padding.top = .4,
  decimal.mark = ",",
  big.mark = " ",
  na_str = ""
)
```

```{r}
#| label: data


# General
this_date <- lubridate::today()
this_date_string <- 
  base::paste0(
    lubridate::mday(this_date), 
    ". ", 
    lubridate::month(this_date, label = TRUE, abbr = FALSE), 
    " ", 
    lubridate::year(this_date)
  )


# Area
links_nj <- readr::read_rds("representativity/link_population_nj.rds")
links_nj_whole <- readr::read_rds("representativity/link_population_nj_whole.rds")
urban_area_nj <- readr::read_rds("representativity/urban_area_nj.rds")
agreement_area_nj <- readr::read_rds("representativity/agreement_area_nj.rds")
municipality_polygon_nj <- readr::read_rds("traffic_link_pop/municipality_polygon_nj.rds")

links_bergen <- readr::read_rds("traffic_link_pop/links_bergen.rds")
urban_area_bergen <- readr::read_rds("representativity/urban_area_bergen.rds")
municipality_polygon_bergen <- readr::read_rds("traffic_link_pop/municipality_polygon_bergen.rds")

links_trondheim <- readr::read_rds("traffic_link_pop/links_trondheim.rds")
urban_area_trondheim <- readr::read_rds("representativity/urban_area_trondheim.rds")
municipality_polygon_trondheim <- readr::read_rds("traffic_link_pop/municipality_polygon_trondheim.rds")

links_oslo <- readr::read_rds("traffic_link_pop/links_oslo.rds")
urban_area_oslo <- readr::read_rds("representativity/urban_area_oslo.rds")
municipality_polygon_oslo <- readr::read_rds("traffic_link_pop/municipality_polygon_oslo.rds")


# Calculation examples
## Bergen
qmd_index_examples_cmdt_brg_month <- readr::read_rds("representativity/cmdt_index_month_8952.rds")

qmd_index_examples_cmdt_brg <- 
  readr::read_rds("representativity/rolling_cmdt_index_8952.rds") |>
  dplyr::bind_rows()

qmd_indexes_official_bergen <-
  readr::read_rds(file = paste0("data_indexpoints_tidy/rolling_indices_8952.rds")) |>
  dplyr::bind_rows()


## Oslo
qmd_index_examples_cmdt_oslo_month <- readr::read_rds("representativity/cmdt_index_month_959.rds")

qmd_index_examples_cmdt_oslo <- 
  readr::read_rds("representativity/rolling_cmdt_index_959.rds") |>
  dplyr::bind_rows()

qmd_indexes_official_oslo <-
  readr::read_rds(file = paste0("data_indexpoints_tidy/rolling_indices_959.rds")) |>
  dplyr::bind_rows()


## Trondheim
qmd_index_examples_cmdt_trd_month <- readr::read_rds("representativity/cmdt_index_month_960.rds")

qmd_index_examples_cmdt_trd <- 
  readr::read_rds("representativity/rolling_cmdt_index_960.rds") |>
  dplyr::bind_rows()

qmd_indexes_official_trd <-
  readr::read_rds(file = paste0("data_indexpoints_tidy/rolling_indices_960.rds")) |>
  dplyr::bind_rows()


## Nord-Jæren
qmd_index_examples_cmdt_nj_month <- readr::read_rds("representativity/cmdt_index_month_nj.rds")

qmd_index_examples_cmdt_nj <- 
  readr::read_rds("representativity/rolling_cmdt_index_nj.rds") |>
  dplyr::bind_rows()

qmd_index_examples_cmdt_nj_month_more <- readr::read_rds("representativity/cmdt_index_month_nj_more.rds")

qmd_index_examples_cmdt_nj_more <- 
  readr::read_rds("representativity/rolling_cmdt_index_nj_more.rds") |>
  dplyr::bind_rows()

qmd_index_examples_cmdt_nj_month_more_chained <- readr::read_rds("representativity/cmdt_index_month_nj_more_chained.rds")

qmd_indexes_official_nj <-
  readr::read_rds(file = paste0("data_indexpoints_tidy/rolling_indices_952.rds")) |>
  dplyr::bind_rows()
```


# Innledning
I dette dokumentet presenteres resultatene fra regneeksempler med forbedret indeksmetode. Resultatene sammenlignes med de offisielle indekstallene.

Dokumentet er et supplement til hovednotatet [Forbedret byindeks](https://vegvesen.sharepoint.com/:w:/r/sites/arb-Trafikkdataogtrafikkutviklingiby/Delte%20dokumenter/General/Arbeidsgruppa/Oppgaver/Representativitet%20i%20byindeks/Representativitet%20i%20byindeks.docx?d=w8fb786036594485bbb5d282a07b9db78&csf=1&web=1&e=p58ZHf).

Sist oppdatert `r this_date_string`. 

Kontaktperson: </br>
Snorre Hansen, </br>
Statens vegvesen </br>
Divisjon for Transport og samfunn, </br>
Avdeling for Transportutvikling, </br>
Seksjon for Veg- og transportteknologi


# Nord-Jæren
Hvilket område byindeksen skal være representativ for er viktig med tanke på hvilke byindekspunkt som skal inngå i datagrunnlaget. Avtaleområdet omfatter kommunene Randaberg og Sola slik de er i dag, samt de kommunegrensene som gjaldt for Stavanger og Sandnes fram til 2019, altså før kommunesammenslåingene som gjaldt fra 1. januar 2020.

Dersom alle trafikklenker i *avtaleområdet* tas med, blir trafikklenkepopulasjonen som vist i @fig-map_nj_whole.

```{r}
#| label: fig-map_nj_whole
#| message: false
#| fig-cap: !expr map_caption

map_links_with_function_class(links_nj_whole) |> 
  addPolygons(
    data = agreement_area_nj,
    weight = 3,
    opacity = 0.3,
    fill = FALSE
  )
```

For å begrense populasjonen til de mer bymessige og sentrale delene, kan vi se på tettstedsområdet definert av Statistisk sentralbyrå. I utgangspunktet beholdes kun trafikklenker som ligger innenfor eller overlapper med dette området, men de viktigste vegene mellom de ulike delområdene må også inkluderes. I tillegg utelates alle trafikklenker med funksjonsklasse E, da disse er av mindre betydning. I @fig-map_nj vises alle trafikklenker som er definert som populasjonen i *byområdet*. 

```{r}
#| label: fig-map_nj
#| message: false
#| fig-cap: !expr map_caption

map_links_with_function_class(links_nj) |> 
  addPolygons(
    data = urban_area_nj,
    weight = 3,
    opacity = 0.3,
    fill = FALSE
  )
```


## Representativitet
Hvilket område byindeksen skal gjelde for har noe å si for representativiteten. Ved å se på utvalget med de 24 trafikklenkene som har de opprinnelige byindekspunktene, kan vi sammenligne representativiteten for disse mellom en populasjon som dekker hele avtaleområdet og en populasjon som kun dekker selve byområdet.

I @fig-function_class_nj vises hvordan trafikkarbeidet til trafikklenkene i byområdet fordeler seg i funksjonsklassene.

```{r}
#| label: fig-function_class_nj
#| fig-cap: "Fordeling av funksjonsklasse i populasjon og utvalg." 
#| message: false
#| warning: false

visualize_function_class_distribution(links_nj)
```

Utvalget av lenker med trafikkregistrering består her av alle kontinuerlige punkt som eksisterer per 2024. I en konkret byindeksberegning er det neppe mulig å bruke alle. Hvilke punkt som kan være med blir begrenset av:

- tilgjengelighet på data av god nok kvalitet
- hvilke år som skal sammenlignes (referanseår)
- andel gjennomgangstrafikk
- hva som er god nok geografisk spredning 
- god nok fordeling på funksjonsklasse

I @tbl-trp_count_nj oppsummeres andel trafikkarbeid i populasjonen og det maksimale, teoretiske utvalget.

```{r}
#| label: tbl-trp_count_nj
#| tbl-cap:  "Statistikk for trafikklenker på Nord-Jæren."

table_link_statistics(links_nj)
```

I @fig-function_class_nj_24 sammenlignes trafikkarbeidsfordelingen til de 23 utvalgte trafikklenkene med byområdets populasjon (punktet ved Rege ligger utenfor byområdet).

```{r}
#| label: fig-function_class_nj_24
#| fig-cap: "Fordeling av funksjonsklasse i populasjon for byområdet og utvalg med 24 punkt." 
#| message: false
#| warning: false

links_nj |> 
  dplyr::mutate(
    point_id =
      dplyr::case_when(
        city_trp ~ point_id,
        TRUE ~ NA_character_
      )
  ) |> 
  visualize_function_class_distribution()
```

I @fig-function_class_nj_24_whole vises tilsvarende sammenligning med populasjonen for hele avtaleområdet. 

```{r}
#| label: fig-function_class_nj_24_whole
#| fig-cap: "Fordeling av funksjonsklasse i populasjon for avtaleområdet og utvalg med 24 punkt." 
#| message: false
#| warning: false

links_nj_whole |> 
  dplyr::mutate(
    point_id =
      dplyr::case_when(
        city_trp ~ point_id,
        TRUE ~ NA_character_
      )
  ) |> 
  visualize_function_class_distribution()
```

Forskjellene er ikke så store, men for avtaleområdet er det flere veger med funksjonsklasse D og E. Da det ikke finnes nok trafikkregistreringspunkter på disse vegene, må det etableres nye dersom disse skal representeres godt i byindeksen. Vi ser også ut fra fordelingen at klasse E utgjør en veldig liten andel av det totale trafikkarbeidet, så byindekspunkter her vil bidra veldig lite til byindeksen. Tilsvarende er det en betydelig andel trafikkarbeid i klasse D i populasjonen, men disse er ikke representert i utvalget av 24 punkt. Her finnes det noen punkt, og ved å inkludere iallfall noen av disse, vil representativiteten øke.

Som et objektivt mål på representativiteten kan forskjellen mellom trafikkarbeidsfordelingen i funksjonsklasser for henholdsvis populasjon og utvalg beregnes. Det er her brukt to ulike måter å beregne forskjellen på, som vist i @tbl-stat_distance_nj_24. De to metodene som er brukt her er "total variation distance" (TVD) og Hellingers distanse. Felles for begge målene er at om fordelingene er like, så blir verdien null.

```{r}
#| label: tbl-stat_distance_nj_24
#| tbl-cap:  "Sammenligning av likheten i populasjon</br>og utvalg med et utvalg på 24 punkt."

links_nj_whole_function_class_stats <-
  links_nj_whole |>
  dplyr::mutate(
    point_id =
      dplyr::case_when(
        city_trp ~ point_id,
        TRUE ~ NA_character_
      )
  ) |>
  summarise_link_population_by_function_class() |>
  calculate_statistical_distance() |>
  dplyr::mutate(
    population = "Avtaleområdet",
    selection = "24"
  ) |>
  dplyr::relocate(
    population, selection
  )

links_nj_function_class_stats <-
  links_nj |>
  dplyr::mutate(
    point_id =
      dplyr::case_when(
        city_trp ~ point_id,
        TRUE ~ NA_character_
      )
  ) |>
  summarise_link_population_by_function_class() |>
  calculate_statistical_distance() |>
  dplyr::mutate(
    population = "Byområdet",
    selection = "23"
  ) |>
  dplyr::relocate(
    population, selection
  )

dplyr::bind_rows(
  links_nj_whole_function_class_stats,
  links_nj_function_class_stats
) |> 
  table_statistical_distance_comparison()
```

I dette tilfellet med 24 punkt, ser vi at byområdet er bedre representert enn avtaleområdet, og det er som forventet.
 
I @tbl-trp_count_nj_24 oppsummeres andel trafikkarbeid i byområdet og utvalg.

```{r}
#| label: tbl-trp_count_nj_24
#| tbl-cap:  "Statistikk for trafikklenker på Nord-Jæren</br>(byområdet) med utvalg på 23 punkt."

links_nj |> 
  dplyr::mutate(
    point_id =
      dplyr::case_when(
        city_trp ~ point_id,
        TRUE ~ NA_character_
      )
  ) |> 
  table_link_statistics()
```

I @tbl-trp_count_nj_24_whole oppsummeres andel trafikkarbeid i avtaleområdet og utvalg.

```{r}
#| label: tbl-trp_count_nj_24_whole
#| tbl-cap:  "Statistikk for trafikklenker på Nord-Jæren</br>(avtaleområdet) med utvalg på 24 punkt."

links_nj_whole |> 
  dplyr::mutate(
    point_id =
      dplyr::case_when(
        city_trp ~ point_id,
        TRUE ~ NA_character_
      )
  ) |> 
  table_link_statistics()
```

Prosentandelene for antall lenker og trafikkarbeid øker litt med en redusert populasjon.

I en forbedret metode vil indeksen være stratifisert på funksjonsklasse. Det vil si at det beregnes først en indeks per funksjonsklasse, som så vektes sammen til en indeks for byområdet. Vektene vil her være andelen trafikkarbeid i funksjonsklassene. Dette vil kompensere for eventuelle skjevheter i utvalget.

Gjennomsnittlig avstand fra en trafikklenke som ikke er med i utvalget til en som har byindekspunkt er på 3,8 for byområdet, mens for avtaleområdet er denne verdien 3,9.

Det er flere fordeler med en begrenset og sentral populasjon kontra en komplett populasjon:

- Færre punkter trengs for å få god representativitet
- Usikkerheten i byindeksen blir gjerne lavere
- Utvalget punkt som allerede er tatt i bruk ligger stort sett i sentrale deler
- Det trengs ikke etableres nye punkter på de minste vegene (som uansett vil bidra lite til byindeksen, men som for representativitetens skyld burde være med)
- Byindeksen vil i større grad fokusere på de delene av vegnettet hvor trafikkveksten utgjør et reelt problem

Representativiteten kan over tid følges med egne tidsserier for:

- antall og andel trafikklenker med indekspunkt
- andel trafikkarbeid med indekspunkt
- likhet i fordeling av trafikkarbeid per funksjonsklasse mellom utvalg og populasjon
- gjennomsnittlig avstand til byindekspunkt


## Regneeksempler
I tillegg til å sammenligne resultater for dagens og forbedret indeksmetode, er det for Nord-Jæren nødvendig å se på:

- betydningen av flere punkt
- kjedet indeks

Regneeksemplene er derfor laget i tre varianter, slik de er presentert i det følgende.


### Dagens utvalg av punkt
I disse regneeksemplene benyttes de samme punktene som i dagens metode, og indeksen er en direkte sammenligning med referanseåret.

For hver månedsindeks kan vi beregne representativiteten til punktutvalget. Dette er vist i @fig-nj_repr.

```{r}
#| label: fig-nj_repr
#| fig-cap: "Utvalgets representativitet over tid." 

qmd_index_examples_cmdt_nj_month |>
  dplyr::select(
    x_label, n_trp_perc, tw_perc, tvd
  ) |> 
  tidyr::pivot_longer(
    cols = c(n_trp_perc, tw_perc, tvd),
    names_to = "measure"
  ) |>
  dplyr::mutate(
    x_label = as.factor(x_label) |> forcats::fct_inorder()
  ) |>
  visualize_representativity()
```

I @fig-nj_official_12 og @fig-nj_improved_12 vises resultatene for ett års glidende indeks.

```{r}
#| label: fig-nj_official_12
#| fig-cap: "Offisiell indeks for Nord-Jæren, ett års glidende indeks."

qmd_indexes_official_nj |> 
  dplyr::filter(
    window == "12_months",
    year < 2025
  ) |> 
  visualize_city_36_mdt_index(
    "Data: Statens vegvesen",
    "Estimert endring i trafikkmengde siste glidende 1 år, dagens metode",
    paste0("Sammenlignet med 2017")
  ) +
  theme(
    plot.background = element_rect(fill = svv_background_color),
    panel.background = element_rect(fill = svv_background_color),
    legend.background = element_rect(fill = svv_background_color)
  ) +
  ylim(-16, 15)
```


```{r}
#| label: fig-nj_improved_12
#| fig-cap: "Forbedret indeks for Nord-Jæren, ett års glidende indeks."

qmd_index_examples_cmdt_nj |> 
  dplyr::filter(window_years == "one") |> 
  visualize_rolling_cmdt_index(
    "Data: Statens vegvesen",
    "Estimert endring i trafikkmengde siste glidende 1 år, forbedret metode",
    paste0("Sammenlignet med 2017")
  ) +
  theme(
    plot.background = element_rect(fill = svv_background_color),
    panel.background = element_rect(fill = svv_background_color),
    legend.background = element_rect(fill = svv_background_color)
  ) +
  ylim(-16, 15)
```

Sammenligner vi resultatene som er vist i @fig-nj_official_12 og @fig-nj_improved_12, ser vi at den generelle trenden over tid er ganske lik, men at forbedret metode jevnt over gir noe høyere verdi på indeksen. Den mest tydelige forskjellen mellom de to er at usikkerheten er mye mindre med forbedret metode. En sammenligning av relativ feilmargin med de to metodene er vist i @fig-nj_compare_em_12.

```{r}
#| label: fig-nj_compare_em_12
#| fig-cap: "Sammenligning av feilmargin, ett års glidende indeks." 

dplyr::inner_join(
  qmd_indexes_official_nj |> 
    dplyr::filter(window == "12_months") |> 
    dplyr::mutate(
      x_label = base::paste0(lubridate::month(month_object, label = TRUE), " ", stringr::str_sub(year, 3, 4)),
      dagens = (base::abs(ci_upper - ci_lower) / 200) / (index_p / 100 + 1)
    ) |> 
    dplyr::select(x_label, dagens),
  qmd_index_examples_cmdt_nj |> 
    dplyr::filter(window_years == "one") |> 
    dplyr::mutate(forbedret = (base::abs(ci_upper - ci_lower) / 200) / (index_p / 100 + 1)) |> 
    dplyr::select(x_label, forbedret),
  by = dplyr::join_by(x_label)
) |> 
tidyr::pivot_longer(
  cols = c(dagens, forbedret),
  names_to = "version"
) |> 
dplyr::mutate(
  x_label = as.factor(x_label) |> forcats::fct_inorder()
) |> 
visualize_em_comparison()
```

Tilsvarende resultater for tre års glidende indeks vises i @fig-nj_official_36 og @fig-nj_improved_36.

```{r}
#| label: fig-nj_official_36
#| fig-cap: "Offisiell indeks for Nord-Jæren, tre års glidende indeks."

qmd_indexes_official_nj |> 
  dplyr::filter(
    window == "36_months",
    year < 2025
  ) |> 
  visualize_city_36_mdt_index(
    "Data: Statens vegvesen",
    "Estimert endring i trafikkmengde siste glidende 3 år, dagens metode",
    paste0("Sammenlignet med 2017")
  ) +
  theme(
    plot.background = element_rect(fill = svv_background_color),
    panel.background = element_rect(fill = svv_background_color),
    legend.background = element_rect(fill = svv_background_color)
  ) +
  ylim(-12, 12)
```

```{r}
#| label: fig-nj_improved_36
#| fig-cap: "Forbedret indeks for Nord-Jæren, tre års glidende indeks."

qmd_index_examples_cmdt_nj |> 
  dplyr::filter(window_years == "three") |> 
  visualize_rolling_cmdt_index(
    "Data: Statens vegvesen",
    "Estimert endring i trafikkmengde siste glidende 3 år, forbedret metode",
    paste0("Sammenlignet med 2017")
  ) +
  theme(
    plot.background = element_rect(fill = svv_background_color),
    panel.background = element_rect(fill = svv_background_color),
    legend.background = element_rect(fill = svv_background_color)
  ) +
  ylim(-12, 12)
```

Som for ett års glidende indeks, ser vi at den generelle trenden over tid er ganske lik, men at forbedret metode jevnt over gir noe høyere verdi på indeksen. Den mest tydelige forskjellen mellom de to er også her at usikkerheten er mye mindre med forbedret metode. En sammenligning av relativ feilmargin med de to metodene er vist i @fig-nj_compare_em_36.

```{r}
#| label: fig-nj_compare_em_36
#| fig-cap: "Sammenligning av feilmargin, tre års glidende indeks." 

dplyr::inner_join(
  qmd_indexes_official_nj |> 
    dplyr::filter(window == "36_months") |> 
    dplyr::mutate(
      x_label = base::paste0(lubridate::month(month_object, label = TRUE), " ", stringr::str_sub(year, 3, 4)),
      dagens = (base::abs(ci_upper - ci_lower) / 200) / (index_p / 100 + 1)
    ) |> 
    dplyr::select(x_label, dagens),
  qmd_index_examples_cmdt_nj |> 
    dplyr::filter(window_years == "three") |> 
    dplyr::mutate(forbedret = (base::abs(ci_upper - ci_lower) / 200) / (index_p / 100 + 1)) |> 
    dplyr::select(x_label, forbedret),
  by = dplyr::join_by(x_label)
) |> 
tidyr::pivot_longer(
  cols = c(dagens, forbedret),
  names_to = "version"
) |> 
dplyr::mutate(
  x_label = as.factor(x_label) |> forcats::fct_inorder()
) |> 
visualize_em_comparison()
```


### Utvidet utvalg punkt
I disse regneeksemplene benyttes de fleste av trafikkregistreringspunktene som finnes i byområdet. Antall punkt øker utover året ettersom flere punkter ble satt i drift i løpet av referanseåret, se @fig-nj_n_trp_12_more.

```{r}
#| label: fig-nj_n_trp_12_more
#| fig-cap: "Utvidet antall punkt i byområdet." 

qmd_index_examples_cmdt_nj_month_more |>
  dplyr::select(x_label, n_trp) |>
  dplyr::mutate(
    x_label = as.factor(x_label) |> forcats::fct_inorder()
  ) |>
  ggplot2::ggplot(aes(x = x_label, y = n_trp)) +
    ggplot2::geom_point(color = "#ed9300") +
    geom_line(group = '', color = "#ed9300") +
    theme_light() +
    theme(
      axis.text.x = element_text(vjust = 0.5, angle = 90),
      axis.title.y = element_text(
        margin = margin(t = 0, r = 15, b = 0, l = 0)),
      axis.title.x = element_text(
        margin = margin(t = 15, r = 0, b = 0, l = 0)),
      panel.grid.minor.x = element_blank(),
      plot.caption =
        element_text(
          face = "italic",
          size = 8,
          lineheight = 1.5,
          vjust = 0
        ),
      plot.background = element_rect(fill = svv_background_color),
      panel.background = element_rect(fill = svv_background_color),
      legend.background = element_rect(fill = svv_background_color),
      legend.position = "bottom"
    ) +
    ggplot2::scale_x_discrete(
      name = NULL,
      breaks = ~ dplyr::if_else(stringr::str_detect(.x, "des"), .x, "")
    ) +
    labs(
      x = NULL, y = "Antall punkt"
    ) +
    ggtitle("Antall punkt")
```

For hver månedsindeks kan vi beregne representativiteten til punktutvalget. Dette er vist i @fig-nj_repr_more.

```{r}
#| label: fig-nj_repr_more
#| fig-cap: "Utvalgets representativitet over tid." 

qmd_index_examples_cmdt_nj_month_more |>
  dplyr::select(
    x_label, n_trp_perc, tw_perc, tvd
  ) |> 
  tidyr::pivot_longer(
    cols = c(n_trp_perc, tw_perc, tvd),
    names_to = "measure"
  ) |>
  dplyr::mutate(
    x_label = as.factor(x_label) |> forcats::fct_inorder()
  ) |>
  visualize_representativity()
```

I @fig-nj_improved_12_more vises resultatene for ett års glidende indeks med forbedret metode. Også her er indeksen en direkte sammenligning med referanseåret.

```{r}
#| label: fig-nj_improved_12_more
#| fig-cap: "Forbedret indeks for Nord-Jæren, ett års glidende indeks."

qmd_index_examples_cmdt_nj_more |> 
  dplyr::filter(window_years == "one") |> 
  visualize_rolling_cmdt_index(
    "Data: Statens vegvesen",
    "Estimert endring i trafikkmengde siste glidende 1 år, forbedret metode",
    paste0("Sammenlignet med 2017")
  ) +
  theme(
    plot.background = element_rect(fill = svv_background_color),
    panel.background = element_rect(fill = svv_background_color),
    legend.background = element_rect(fill = svv_background_color)
  ) +
  ylim(-16, 15)
```

I @fig-nj_improved_36_more vises resultatene for tre års glidende indeks med forbedret metode.

```{r}
#| label: fig-nj_improved_36_more
#| fig-cap: "Forbedret indeks for Nord-Jæren, tre års glidende indeks."

# TODO: include the line for index with today's n_trp
qmd_index_examples_cmdt_nj_more |> 
  dplyr::filter(window_years == "three") |> 
  visualize_rolling_cmdt_index(
    "Data: Statens vegvesen",
    "Estimert endring i trafikkmengde siste glidende 3 år, forbedret metode",
    paste0("Sammenlignet med 2017")
  ) +
  theme(
    plot.background = element_rect(fill = svv_background_color),
    panel.background = element_rect(fill = svv_background_color),
    legend.background = element_rect(fill = svv_background_color)
  ) +
  ylim(-12, 12)
```

En sammenligning av relativ feilmargin i tre års glidende indeks basert på henholdsvis dagens utvalg og utvidet utvalg, er vist i @fig-nj_compare_em_more.

```{r}
#| label: fig-nj_compare_em_more
#| fig-cap: "Sammenligning av feilmargin, tre års glidende indeks." 

dplyr::inner_join(
  qmd_index_examples_cmdt_nj_more |> 
    dplyr::filter(window_years == "three") |> 
    dplyr::mutate(utvidet = (base::abs(ci_upper - ci_lower) / 200) / (index_p / 100 + 1)) |> 
    dplyr::select(x_label, utvidet),
  qmd_index_examples_cmdt_nj |> 
    dplyr::filter(window_years == "three") |> 
    dplyr::mutate(dagens = (base::abs(ci_upper - ci_lower) / 200) / (index_p / 100 + 1)) |> 
    dplyr::select(x_label, dagens),
  by = dplyr::join_by(x_label)
) |> 
tidyr::pivot_longer(
  cols = c(dagens, utvidet),
  names_to = "version"
) |> 
dplyr::mutate(
  x_label = as.factor(x_label) |> forcats::fct_inorder()
) |> 
ggplot(aes(x_label, value, color = version, group = version)) +
    geom_point() +
    geom_line() +
    scale_color_manual(
      values = c(
        "dagens" = "#008ec2",
        "utvidet" = "#ed9300"
      ),
      breaks = c(
        "dagens",
        "utvidet"
      ),
      labels = c(
        "Dagens",
        "Utvidet"
      ),
      name = "Utvalg"
    ) +
    theme_light() +
    theme(
      axis.text.x = element_text(vjust = 0.5, angle = 90),
      axis.title.y = element_text(
        margin = margin(t = 0, r = 15, b = 0, l = 0)),
      axis.title.x = element_text(
        margin = margin(t = 15, r = 0, b = 0, l = 0)),
      panel.grid.minor.x = element_blank(),
      plot.caption =
        element_text(
          face = "italic",
          size = 8,
          lineheight = 1.5,
          vjust = 0
        ),
      legend.position = "bottom"
    ) +
    ggplot2::scale_x_discrete(
      name = NULL,
      breaks = ~ dplyr::if_else(stringr::str_detect(.x, "apr|aug|des"), .x, "")
    ) +
    ylim(0, NA) +
    theme(
      plot.background = element_rect(fill = svv_background_color),
      panel.background = element_rect(fill = svv_background_color),
      legend.background = element_rect(fill = svv_background_color)
    ) +
    labs(
      x = NULL, y = "Relativ feilmargin"
    ) +
    ggtitle("Relativ feilmargin")
```


### Kjedet indeks
For å utnytte tilgjengelig datagrunnlag bedre, bør det tas hensyn til at utvalget med punkter vil variere over tid. For Nord-Jæren er det nødvendig å ta hensyn til:

- Flere punkter ble satt i drift i årene 2017 og 2018.
- Nytt vegsystem med Eiganestunnelen og Ryfylketunnelen ble åpnet i 2020.
- Byhaugtunnelen var stengt i omkring to år, og gjenåpnet i 2022.

En kjedet indeks vil da kunne utnytte flere punkter med en inndeling i delperioder slik:

- 2017-2019
- 2019-2023
- 2023- 

Antallet punkt som er tilgjengelig er da som vist i @fig-nj_n_trp_chained.

```{r}
#| label: fig-nj_n_trp_chained
#| fig-cap: "Antall punkt." 

qmd_index_examples_cmdt_nj_month_more_chained |>
  dplyr::select(x_label, n_trp) |>
  dplyr::mutate(
    x_label = as.factor(x_label) |> forcats::fct_inorder()
  ) |>
  ggplot2::ggplot(aes(x = x_label, y = n_trp)) +
    ggplot2::geom_point(color = "#ed9300") +
    geom_line(group = '', color = "#ed9300") +
    theme_light() +
    theme(
      axis.text.x = element_text(vjust = 0.5, angle = 90),
      axis.title.y = element_text(
        margin = margin(t = 0, r = 15, b = 0, l = 0)),
      axis.title.x = element_text(
        margin = margin(t = 15, r = 0, b = 0, l = 0)),
      panel.grid.minor.x = element_blank(),
      plot.caption =
        element_text(
          face = "italic",
          size = 8,
          lineheight = 1.5,
          vjust = 0
        ),
      plot.background = element_rect(fill = svv_background_color),
      panel.background = element_rect(fill = svv_background_color),
      legend.background = element_rect(fill = svv_background_color),
      legend.position = "bottom"
    ) +
    ggplot2::scale_x_discrete(
      name = NULL,
      breaks = ~ dplyr::if_else(stringr::str_detect(.x, "des"), .x, "")
    ) +
    labs(
      x = NULL, y = "Antall punkt"
    ) +
    ggtitle("Antall punkt")
```

For hver månedsindeks kan vi beregne representativiteten til punktutvalget. Dette er vist i @fig-nj_repr_chained.

```{r}
#| label: fig-nj_repr_chained
#| fig-cap: "Utvalgets representativitet over tid." 

qmd_index_examples_cmdt_nj_month_more_chained |>
  dplyr::select(
    x_label, n_trp_perc, tw_perc, tvd
  ) |> 
  tidyr::pivot_longer(
    cols = c(n_trp_perc, tw_perc, tvd),
    names_to = "measure"
  ) |>
  dplyr::mutate(
    x_label = as.factor(x_label) |> forcats::fct_inorder()
  ) |>
  visualize_representativity()
```

Et regneeksempel for indeks til 2024 viser følgende estimater for endringen i trafikk:

- 2017-2019: -2,5 % 
- 2019-2023:  6,4 % 
- 2023-2024:  1,0 % 

Til sammen gir dette en endring fra 2017 til 2024 på 4,8 % med en feilmargin på 1,2 prosentpoeng.

Til sammenligning er kjeding av årlig indeks slik vi finner den i den offisielle rapporten på 0,6 % med en feilmargin på 12,6 prosentpoeng. Her benyttes i varierende grad et antall punkter mellom 19 og 23.

Ett års glidende indeks viser for 2024 en endring på 6,5 % med en feilmargin på 1,3 prosentpoeng.

Disse tallene illustrerer fordelen med en periodevis kjedet indeks da denne har et større antall punkt. Feilmarginen er mye mindre enn for årlig kjedet indeks, men på samme nivå som ett års glidende indeks.


# Bergen
Indekstall for Bergen er beregnet med forbedret metode. Det aktuelle vegnettet er vist i @fig-map_bergen. 

```{r}
#| label: fig-map_bergen
#| message: false
#| fig-cap: !expr map_caption

map_links_with_function_class(links_bergen) |> 
  addPolygons(
    data = municipality_polygon_bergen,
    weight = 3,
    opacity = 0.3,
    fill = FALSE
  ) |>
  addPolygons(
    data = urban_area_bergen,
    weight = 3,
    opacity = 0.3,
    fill = FALSE
  )
```

I forbedret metode er byindeksens område snevret inn til å omfatte kun de største tettstedene, og derfor er ikke alle punkt fra den offisielle indeksen tatt med i regneeksemplene. Antall punkt som bidrar med datagrunnlag i de enkelte månedene er vist i @fig-bergen_compare_n_trp_12.

```{r}
#| label: fig-bergen_compare_n_trp_12
#| fig-cap: "Sammenligning av antall punkt." 

dplyr::inner_join(
  qmd_indexes_official_bergen |>
    dplyr::filter(window == "12_months") |>
    dplyr::mutate(
      x_label = base::paste0(lubridate::month(month_object, label = TRUE), " ", stringr::str_sub(year, 3, 4))
    ) |>
    dplyr::select(x_label, dagens = n_trp),
  qmd_index_examples_cmdt_brg_month |>
    dplyr::select(x_label, forbedret = n_trp),
  by = dplyr::join_by(x_label)
) |>
tidyr::pivot_longer(
  cols = c(dagens, forbedret),
  names_to = "version"
) |>
dplyr::mutate(
  x_label = as.factor(x_label) |> forcats::fct_inorder()
) |>
visualize_n_trp_comparison()
```

For hver månedsindeks kan vi beregne representativiteten til punktutvalget. Dette er vist i @fig-bergen_repr.

```{r}
#| label: fig-bergen_repr
#| fig-cap: "Utvalgets representativitet over tid." 

qmd_index_examples_cmdt_brg_month |>
  dplyr::select(
    x_label, n_trp_perc, tw_perc, tvd
  ) |> 
  tidyr::pivot_longer(
    cols = c(n_trp_perc, tw_perc, tvd),
    names_to = "measure"
  ) |>
  dplyr::mutate(
    x_label = as.factor(x_label) |> forcats::fct_inorder()
  ) |>
  visualize_representativity()
```

## Ett års glidende indeks
```{r}
#| label: fig-bergen_official_12
#| fig-cap: "Offisiell indeks for Bergen, ett års glidende indeks."

qmd_indexes_official_bergen |> 
  dplyr::filter(
    window == "12_months",
    year < 2025
  ) |> 
  visualize_city_36_mdt_index(
    "Data: Statens vegvesen",
    "Estimert endring i trafikkmengde siste glidende 1 år, nåværende metode",
    paste0("Sammenlignet med 2018")
  ) +
  theme(
    plot.background = element_rect(fill = svv_background_color),
    panel.background = element_rect(fill = svv_background_color),
    legend.background = element_rect(fill = svv_background_color)
  ) +
  ylim(-15, 4)
```

```{r}
#| label: fig-bergen_improved_12
#| fig-cap: "Forbedret indeks for Bergen, ett års glidende indeks."

qmd_index_examples_cmdt_brg |> 
  dplyr::filter(window_years == "one") |> 
  visualize_rolling_cmdt_index(
    "Data: Statens vegvesen",
    "Estimert endring i trafikkmengde siste glidende 1 år, forbedret metode",
    paste0("Sammenlignet med 2018")
  ) +
  theme(
    plot.background = element_rect(fill = svv_background_color),
    panel.background = element_rect(fill = svv_background_color),
    legend.background = element_rect(fill = svv_background_color)
  ) +
  ylim(-15, 4)
```

```{r}
#| label: fig-bergen_compare_em_12
#| fig-cap: "Sammenligning av feilmargin." 

dplyr::inner_join(
  qmd_indexes_official_bergen |> 
    dplyr::filter(window == "12_months") |> 
    dplyr::mutate(
      x_label = base::paste0(lubridate::month(month_object, label = TRUE), " ", stringr::str_sub(year, 3, 4)),
      dagens = (base::abs(ci_upper - ci_lower) / 200) / (index_p / 100 + 1)
    ) |> 
    dplyr::select(x_label, dagens),
  qmd_index_examples_cmdt_brg |> 
    dplyr::filter(window_years == "one") |> 
    dplyr::mutate(forbedret = (base::abs(ci_upper - ci_lower) / 200) / (index_p / 100 + 1)) |> 
    dplyr::select(x_label, forbedret),
  by = dplyr::join_by(x_label)
) |> 
tidyr::pivot_longer(
  cols = c(dagens, forbedret),
  names_to = "version"
) |> 
dplyr::mutate(
  x_label = as.factor(x_label) |> forcats::fct_inorder()
) |> 
visualize_em_comparison()
```


## Tre års glidende indeks

```{r}
#| label: fig-bergen_36_official
#| fig-cap: "Offisiell indeks for Bergen, tre års glidende indeks."

qmd_indexes_official_bergen |> 
  dplyr::filter(
    window == "36_months",
    year < 2025
  ) |> 
  visualize_city_36_mdt_index(
    "Data: Statens vegvesen",
    "Estimert endring i trafikkmengde siste glidende 3 år, dagens metode",
    paste0("Sammenlignet med 2018")
  ) +
  theme(
    plot.background = element_rect(fill = svv_background_color),
    panel.background = element_rect(fill = svv_background_color),
    legend.background = element_rect(fill = svv_background_color)
  ) +
  ylim(-10, 4)
```

```{r}
#| label: fig-bergen_improved_36
#| fig-cap: "Forbedret indeks for Bergen, tre års glidende indeks."

qmd_index_examples_cmdt_brg |> 
  dplyr::filter(window_years == "three") |> 
  visualize_rolling_cmdt_index(
    "Data: Statens vegvesen",
    "Estimert endring i trafikkmengde siste glidende 3 år, forbedret metode",
    paste0("Sammenlignet med 2018")
  ) +
  theme(
    plot.background = element_rect(fill = svv_background_color),
    panel.background = element_rect(fill = svv_background_color),
    legend.background = element_rect(fill = svv_background_color)
  ) +
  ylim(-10, 4)
```

```{r}
#| label: fig-bergen_compare_em_36
#| fig-cap: "Sammenligning av feilmargin." 

dplyr::inner_join(
  qmd_indexes_official_bergen |> 
  dplyr::filter(window == "36_months") |> 
  dplyr::mutate(
    x_label = base::paste0(lubridate::month(month_object, label = TRUE), " ", stringr::str_sub(year, 3, 4)),
    dagens = (base::abs(ci_upper - ci_lower) / 200) / (index_p / 100 + 1)
  ) |> 
  dplyr::select(x_label, dagens),
  qmd_index_examples_cmdt_brg |> 
  dplyr::filter(window_years == "three") |> 
  dplyr::mutate(forbedret = (base::abs(ci_upper - ci_lower) / 200) / (index_p / 100 + 1)) |> 
  dplyr::select(x_label, forbedret),
  by = dplyr::join_by(x_label)
) |> 
tidyr::pivot_longer(
  cols = c(dagens, forbedret),
  names_to = "version"
) |> 
dplyr::mutate(
  x_label = as.factor(x_label) |> forcats::fct_inorder()
) |> 
visualize_em_comparison()
```


# Trondheim
Vegnettet som overlapper med de sentrale tettstedene er vist i @fig-map_trd.

```{r}
#| label: fig-map_trd
#| message: false
#| fig-cap: !expr map_caption

map_links_with_function_class(links_trondheim) |> 
  addPolygons(
    data = municipality_polygon_trondheim,
    weight = 3,
    opacity = 0.3,
    fill = FALSE
  ) |>
  addPolygons(
    data = urban_area_trondheim,
    weight = 3,
    opacity = 0.3,
    fill = FALSE
  )
```


I forbedret metode er byindeksens område snevret inn til å omfatte kun de største tettstedene, og derfor er ikke alle punkt fra den offisielle indeksen tatt med i regneeksemplene. Punkt på kommunalveg er også utelatt. Antall punkt som bidrar med datagrunnlag i de enkelte månedene er vist i @fig-trd_compare_n_trp_12.

```{r}
#| label: fig-trd_compare_n_trp_12
#| fig-cap: "Sammenligning av antall punkt." 

dplyr::inner_join(
  qmd_indexes_official_trd |>
    dplyr::filter(window == "12_months") |>
    dplyr::mutate(
      x_label = base::paste0(lubridate::month(month_object, label = TRUE), " ", stringr::str_sub(year, 3, 4))
    ) |>
    dplyr::select(x_label, dagens = n_trp),
  qmd_index_examples_cmdt_trd_month |>
    dplyr::select(x_label, forbedret = n_trp),
  by = dplyr::join_by(x_label)
) |>
tidyr::pivot_longer(
  cols = c(dagens, forbedret),
  names_to = "version"
) |>
dplyr::mutate(
  x_label = as.factor(x_label) |> forcats::fct_inorder()
) |>
visualize_n_trp_comparison()
```

For hver månedsindeks kan vi beregne representativiteten til punktutvalget. Dette er vist i @fig-trd_repr.

```{r}
#| label: fig-trd_repr
#| fig-cap: "Utvalgets representativitet over tid." 

qmd_index_examples_cmdt_trd_month |>
  dplyr::select(
    x_label, n_trp_perc, tw_perc, tvd
  ) |> 
  tidyr::pivot_longer(
    cols = c(n_trp_perc, tw_perc, tvd),
    names_to = "measure"
  ) |>
  dplyr::mutate(
    x_label = as.factor(x_label) |> forcats::fct_inorder()
  ) |>
  visualize_representativity()
```


## Ett års glidende indeks
```{r}
#| label: fig-trd_official_12
#| fig-cap: "Offisiell indeks for Trondheim, ett års glidende indeks."

qmd_indexes_official_trd |> 
  dplyr::filter(
    window == "12_months",
    year < 2025
  ) |> 
  visualize_city_36_mdt_index(
    "Data: Statens vegvesen",
    "Estimert endring i trafikkmengde siste glidende 1 år, nåværende metode",
    paste0("Sammenlignet med 2019")
  ) +
  theme(
    plot.background = element_rect(fill = svv_background_color),
    panel.background = element_rect(fill = svv_background_color),
    legend.background = element_rect(fill = svv_background_color)
  ) +
  ylim(-12, 12)
```

```{r}
#| label: fig-trd_improved_12
#| fig-cap: "Forbedret indeks for Trondheim, ett års glidende indeks."

qmd_index_examples_cmdt_trd |> 
  dplyr::filter(window_years == "one") |> 
  visualize_rolling_cmdt_index(
    "Data: Statens vegvesen",
    "Estimert endring i trafikkmengde siste glidende 1 år, forbedret metode",
    paste0("Sammenlignet med 2019")
  ) +
  theme(
    plot.background = element_rect(fill = svv_background_color),
    panel.background = element_rect(fill = svv_background_color),
    legend.background = element_rect(fill = svv_background_color)
  ) +
  ylim(-12, 12)
```

```{r}
#| label: fig-trd_compare_em_12
#| fig-cap: "Sammenligning av feilmargin." 

dplyr::inner_join(
  qmd_indexes_official_trd |> 
    dplyr::filter(window == "12_months") |> 
    dplyr::mutate(
      x_label = base::paste0(lubridate::month(month_object, label = TRUE), " ", stringr::str_sub(year, 3, 4)),
      dagens = (base::abs(ci_upper - ci_lower) / 200) / (index_p / 100 + 1)
    ) |> 
    dplyr::select(x_label, dagens),
  qmd_index_examples_cmdt_trd |> 
    dplyr::filter(window_years == "one") |> 
    dplyr::mutate(forbedret = (base::abs(ci_upper - ci_lower) / 200) / (index_p / 100 + 1)) |> 
    dplyr::select(x_label, forbedret),
  by = dplyr::join_by(x_label)
) |> 
tidyr::pivot_longer(
  cols = c(dagens, forbedret),
  names_to = "version"
) |> 
dplyr::mutate(
  x_label = as.factor(x_label) |> forcats::fct_inorder()
) |> 
visualize_em_comparison()
```


## Tre års glidende indeks

```{r}
#| label: fig-trd_36_official
#| fig-cap: "Offisiell indeks for Trondheim, tre års glidende indeks."

qmd_indexes_official_trd |> 
  dplyr::filter(
    window == "36_months",
    year < 2025
  ) |> 
  visualize_city_36_mdt_index(
    "Data: Statens vegvesen",
    "Estimert endring i trafikkmengde siste glidende 3 år, dagens metode",
    paste0("Sammenlignet med 2019")
  ) +
  theme(
    plot.background = element_rect(fill = svv_background_color),
    panel.background = element_rect(fill = svv_background_color),
    legend.background = element_rect(fill = svv_background_color)
  ) +
  ylim(-8, 12)
```

```{r}
#| label: fig-trd_improved_36
#| fig-cap: "Forbedret indeks for Trondheim, tre års glidende indeks."

qmd_index_examples_cmdt_brg |> 
  dplyr::filter(window_years == "three") |> 
  visualize_rolling_cmdt_index(
    "Data: Statens vegvesen",
    "Estimert endring i trafikkmengde siste glidende 3 år, forbedret metode",
    paste0("Sammenlignet med 2019")
  ) +
  theme(
    plot.background = element_rect(fill = svv_background_color),
    panel.background = element_rect(fill = svv_background_color),
    legend.background = element_rect(fill = svv_background_color)
  ) +
  ylim(-8, 12)
```

```{r}
#| label: fig-trd_compare_em_36
#| fig-cap: "Sammenligning av feilmargin." 

dplyr::inner_join(
  qmd_indexes_official_trd |> 
  dplyr::filter(window == "36_months") |> 
  dplyr::mutate(
    x_label = base::paste0(lubridate::month(month_object, label = TRUE), " ", stringr::str_sub(year, 3, 4)),
    dagens = (base::abs(ci_upper - ci_lower) / 200) / (index_p / 100 + 1)
  ) |> 
  dplyr::select(x_label, dagens),
  qmd_index_examples_cmdt_trd |> 
  dplyr::filter(window_years == "three") |> 
  dplyr::mutate(forbedret = (base::abs(ci_upper - ci_lower) / 200) / (index_p / 100 + 1)) |> 
  dplyr::select(x_label, forbedret),
  by = dplyr::join_by(x_label)
) |> 
tidyr::pivot_longer(
  cols = c(dagens, forbedret),
  names_to = "version"
) |> 
dplyr::mutate(
  x_label = as.factor(x_label) |> forcats::fct_inorder()
) |> 
visualize_em_comparison()
```


# Oslo
Vegnettet som overlapper med de sentrale tettstedene er vist i @fig-map_oslo.

```{r}
#| label: fig-map_oslo
#| message: false
#| fig-cap: !expr map_caption

map_links_with_function_class(links_oslo) |> 
  addPolygons(
    data = municipality_polygon_oslo,
    weight = 3,
    opacity = 0.3,
    fill = FALSE
  ) |>
  addPolygons(
    data = urban_area_oslo,
    weight = 3,
    opacity = 0.3,
    fill = FALSE
  )
```

Antall punkt som er med i månedsindeksene, er vist i @fig-oslo_compare_n_trp_12.

```{r}
#| label: fig-oslo_compare_n_trp_12
#| fig-cap: "Sammenligning av antall punkt." 

dplyr::inner_join(
  qmd_indexes_official_oslo |>
    dplyr::filter(window == "12_months") |>
    dplyr::mutate(
      x_label = base::paste0(lubridate::month(month_object, label = TRUE), " ", stringr::str_sub(year, 3, 4))
    ) |>
    dplyr::select(x_label, dagens = n_trp),
  qmd_index_examples_cmdt_oslo_month |>
    dplyr::select(x_label, forbedret = n_trp),
  by = dplyr::join_by(x_label)
) |>
tidyr::pivot_longer(
  cols = c(dagens, forbedret),
  names_to = "version"
) |>
dplyr::mutate(
  x_label = as.factor(x_label) |> forcats::fct_inorder()
) |>
visualize_n_trp_comparison()
```

For hver månedsindeks kan vi beregne representativiteten til punktutvalget. Dette er vist i @fig-oslo_repr.

```{r}
#| label: fig-oslo_repr
#| fig-cap: "Utvalgets representativitet over tid." 

qmd_index_examples_cmdt_oslo_month |>
  dplyr::select(
    x_label, n_trp_perc, tw_perc, tvd
  ) |> 
  tidyr::pivot_longer(
    cols = c(n_trp_perc, tw_perc, tvd),
    names_to = "measure"
  ) |>
  dplyr::mutate(
    x_label = as.factor(x_label) |> forcats::fct_inorder()
  ) |>
  visualize_representativity()
```


## Ett års glidende indeks
```{r}
#| label: fig-oslo_official_12
#| fig-cap: "Offisiell indeks for Oslo, ett års glidende indeks."

qmd_indexes_official_oslo |> 
  dplyr::filter(
    window == "12_months",
    year < 2025
  ) |> 
  visualize_city_36_mdt_index(
    "Data: Statens vegvesen",
    "Estimert endring i trafikkmengde siste glidende 1 år, nåværende metode",
    paste0("Sammenlignet med 2018")
  ) +
  theme(
    plot.background = element_rect(fill = svv_background_color),
    panel.background = element_rect(fill = svv_background_color),
    legend.background = element_rect(fill = svv_background_color)
  ) +
  ylim(-15, 4)
```

```{r}
#| label: fig-oslo_improved_12
#| fig-cap: "Forbedret indeks for Oslo, ett års glidende indeks."

qmd_index_examples_cmdt_oslo |> 
  dplyr::filter(window_years == "one") |> 
  visualize_rolling_cmdt_index(
    "Data: Statens vegvesen",
    "Estimert endring i trafikkmengde siste glidende 1 år, forbedret metode",
    paste0("Sammenlignet med 2018")
  ) +
  theme(
    plot.background = element_rect(fill = svv_background_color),
    panel.background = element_rect(fill = svv_background_color),
    legend.background = element_rect(fill = svv_background_color)
  ) +
  ylim(-15, 4)
```

```{r}
#| label: fig-oslo_compare_em_12
#| fig-cap: "Sammenligning av feilmargin." 

dplyr::inner_join(
  qmd_indexes_official_oslo |> 
    dplyr::filter(window == "12_months") |> 
    dplyr::mutate(
      x_label = base::paste0(lubridate::month(month_object, label = TRUE), " ", stringr::str_sub(year, 3, 4)),
      dagens = (base::abs(ci_upper - ci_lower) / 200) / (index_p / 100 + 1)
    ) |> 
    dplyr::select(x_label, dagens),
  qmd_index_examples_cmdt_oslo |> 
    dplyr::filter(window_years == "one") |> 
    dplyr::mutate(forbedret = (base::abs(ci_upper - ci_lower) / 200) / (index_p / 100 + 1)) |> 
    dplyr::select(x_label, forbedret),
  by = dplyr::join_by(x_label)
) |> 
tidyr::pivot_longer(
  cols = c(dagens, forbedret),
  names_to = "version"
) |> 
dplyr::mutate(
  x_label = as.factor(x_label) |> forcats::fct_inorder()
) |> 
visualize_em_comparison()
```



## Tre års glidende indeks

```{r}
#| label: fig-oslo_36_official
#| fig-cap: "Offisiell indeks for Oslo, tre års glidende indeks."

qmd_indexes_official_oslo |> 
  dplyr::filter(
    window == "36_months",
    year < 2025
  ) |> 
  visualize_city_36_mdt_index(
    "Data: Statens vegvesen",
    "Estimert endring i trafikkmengde siste glidende 3 år, dagens metode",
    paste0("Sammenlignet med 2018")
  ) +
  theme(
    plot.background = element_rect(fill = svv_background_color),
    panel.background = element_rect(fill = svv_background_color),
    legend.background = element_rect(fill = svv_background_color)
  ) +
  ylim(-8, 4)
```

```{r}
#| label: fig-oslo_improved_36
#| fig-cap: "Forbedret indeks for Oslo, tre års glidende indeks."

qmd_index_examples_cmdt_oslo |> 
  dplyr::filter(window_years == "three") |> 
  visualize_rolling_cmdt_index(
    "Data: Statens vegvesen",
    "Estimert endring i trafikkmengde siste glidende 3 år, forbedret metode",
    paste0("Sammenlignet med 2018")
  ) +
  theme(
    plot.background = element_rect(fill = svv_background_color),
    panel.background = element_rect(fill = svv_background_color),
    legend.background = element_rect(fill = svv_background_color)
  ) +
  ylim(-8, 4)
```

```{r}
#| label: fig-oslo_compare_em_36
#| fig-cap: "Sammenligning av feilmargin." 

dplyr::inner_join(
  qmd_indexes_official_oslo |> 
  dplyr::filter(window == "36_months") |> 
  dplyr::mutate(
    x_label = base::paste0(lubridate::month(month_object, label = TRUE), " ", stringr::str_sub(year, 3, 4)),
    dagens = (base::abs(ci_upper - ci_lower) / 200) / (index_p / 100 + 1)
  ) |> 
  dplyr::select(x_label, dagens),
  qmd_index_examples_cmdt_oslo |> 
  dplyr::filter(window_years == "three") |> 
  dplyr::mutate(forbedret = (base::abs(ci_upper - ci_lower) / 200) / (index_p / 100 + 1)) |> 
  dplyr::select(x_label, forbedret),
  by = dplyr::join_by(x_label)
) |> 
tidyr::pivot_longer(
  cols = c(dagens, forbedret),
  names_to = "version"
) |> 
dplyr::mutate(
  x_label = as.factor(x_label) |> forcats::fct_inorder()
) |> 
visualize_em_comparison()
```

# Oppsummering
Regneeksemplene viser at forbedret metode har følgende egenskaper sammenlignet med dagens metode:

- lavere usikkerhet
- utnytter mer av tilgjengelige data
- viser de samme trendene
- representativiteten kan beskrives med flere målbare størrelser