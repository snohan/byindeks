---
title: "Sjekk av sykkelindeks"
format: 
  html:
    css: svv.css
    number-sections: true
    toc: true
    toc-location: left
    toc-title: "Innhold"
    toc-expand: true
    df-print: paged
    self-contained: true
crossref:
  fig-title: Figur
  tbl-title: Tabell
  title-delim: .
  fig-prefix: figur
  tbl-prefix: tabell
editor: source
knitr: 
  opts_chunk: 
    echo: false
---


```{r}
#| label: setup
#| include: false
#| echo: false
#| warning: false
#| message: false
  
# Packages are loaded through sourcing rmd_setup.R
source("rmd_setup.R")

# Traffic Data API calls to get points metadata and aadt
source("get_from_trafficdata_api.R")
source("split_road_system_reference.R")
library(DT)
library(htmltools)

# Point metadata from Traffic Data API
# NB! source once per session
#source("bike_index_check_dataprep.R")
points <- readr::read_rds("trps.rds")
```


```{r}
#| label: get_data

# Look at details in one city at a time

# City numbers
# Bergen 5952         2019 - 2025-06
# Buskerudbyen 19952  2023 - 2025-06
# Førde 9952          2018 - 2025-06
# Grenland 4953       2018 - 2025-06
# Kristiansand 14952  2018 - 2025-06
# Nedre Glomma 5953   2019 - 2025-06
# Nord-Jæren 6952     2020 - 2025-06
# Osloområdet 17952   2018 - 2025-06
# Tromsø 11952        2021 - 2025-06
# Trondheim 13952     2023 - 2025-06
# Vestfold 12952      2017 - 2025-06


# Choose
index_year <- 2025
index_month <- 6 # latest published
city_number <- 12952

new_month_name <- 
  lubridate::as_date(paste0(index_year, "-", index_month + 1, "-01")) |> 
  lubridate::month(label = TRUE, abbr = FALSE) |> 
  stringr::str_to_title()

# new_month_name_2 <-
#   lubridate::as_date(paste0(index_year, "-", index_month + 2, "-01")) |>
#   lubridate::month(label = TRUE, abbr = FALSE) |>
#   stringr::str_to_title()

# Fetch
city_index <- 
  get_published_index_for_months(
    city_number, 
    index_year, 
    index_month
  )

pointindex <- 
  get_published_bikepointindex_for_months(
    city_number, 
    index_year, 
    index_month
  )

city_trps <- pointindex[[1]]
pointindices <- pointindex[[2]]
city_name <- city_index$area_name[1]

city_trps_meta <- 
  points %>% 
  dplyr::filter(trp_id %in% city_trps) %>% 
  split_road_system_reference() %>% 
  dplyr::select(
    trp_id, 
    name, 
    road_reference, 
    road_category_and_number,
    #section_number, subsection_number, meter,
    #intersection_part_number, intersection_meter,
    county_name, 
    municipality_name, 
    lat, lon
  )

# missing_trp <-
#   tibble::tibble(
#     trp_id = city_trps
#   ) |>
#   dplyr::filter(
#     !(trp_id %in% city_trps_meta$trp_id)
#   )

## AADT ----
adt <- getAdtForpoints(city_trps_meta$trp_id)

adt_filtered <- adt %>%
  dplyr::filter(coverage > 50) %>%
  dplyr::group_by(trp_id) %>%
  dplyr::filter(year == max(year)) %>%
  dplyr::select(trp_id, adt)

# New month's pointindices
point_index_new <- 
  get_pointindices_for_trp_list(city_trps, index_year)
```


```{r}
#| label: data_prep

city_index_prepared <- 
  city_index %>% 
  dplyr::filter(
    period == "month"
  ) %>% 
  dplyr::mutate(
    length_range = 
      dplyr::case_when(
        length_range == "[..,..)" ~ "alle",
        length_range == "[..,5.6)" ~ "lette",
        length_range == "[5.6,..)" ~ "tunge"
      )
  ) %>% 
  dplyr::mutate(
    road_category = 
      dplyr::case_when(
        road_category == "EUROPAVEG_RIKSVEG_FYLKESVEG_KOMMUNALVEG" ~ "Europa-, riks- og fylkesveg"
      )
  ) %>% 
  dplyr::mutate(
    month_object = lubridate::make_date(year = year, month = month),
    month_name = lubridate::month(month_object, label = TRUE, abbr = FALSE)
  ) %>% 
  dplyr::filter(
    road_category == "Europa-, riks- og fylkesveg",
    length_range == "alle",
    day_type == "ALL"
  )

pointindex_prepared <- 
  pointindices %>% 
  dplyr::filter(
    period == "month",
    is_excluded == FALSE,
    is_manually_excluded == FALSE
  ) %>% 
  dplyr::select(
    trp_id, 
    year, 
    month, 
    index_total_p,
    index_total_coverage
  )

point_index_new_prepared <- 
  point_index_new %>% 
  dplyr::filter(
    day_type == "ALL",
    period == "month",
    month == index_month + 1
  ) %>% 
  dplyr::select(
    trp_id, 
    year, 
    month, 
    index_total_p,
    index_total_coverage
  )

# point_index_new_prepared_2 <-
#   point_index_new %>%
#   dplyr::filter(
#     day_type == "ALL",
#     period == "month",
#     month == index_month + 2
#   ) %>%
#   dplyr::select(
#     trp_id,
#     year,
#     month,
#     index_total_p,
#     index_total_coverage
#   )

# point_index_new_prepared_3 <- point_index_new %>%
#   dplyr::filter(day_type == "ALL",
#                 period == "month",
#                 month == index_month + 3) %>%
#   dplyr::select(trp_id, year, month, index_total_p,
#                 index_total_coverage, length_excluded, length_coverage,
#                 index_short, index_long)
# 
# point_index_new_prepared_4 <- point_index_new %>%
#   dplyr::filter(day_type == "ALL",
#                 period == "month",
#                 month == index_month + 4) %>%
#   dplyr::select(trp_id, year, month, index_total_p,
#                 index_total_coverage, length_excluded, length_coverage,
#                 index_short, index_long)


pointindex_prepared_all <- 
  dplyr::bind_rows(
    pointindex_prepared,
    point_index_new_prepared,
    # point_index_new_prepared_2,
    # point_index_new_prepared_3,
    # point_index_new_prepared_4
  ) %>% 
  dplyr::left_join(
    city_trps_meta,
    by = "trp_id"
  ) %>% 
  dplyr::left_join(
    adt_filtered,
    by = "trp_id"
  )

city_trps_new_pointindex <- 
  city_trps_meta %>% 
  dplyr::left_join(
    point_index_new_prepared,
    by = "trp_id"
  ) %>% 
  dplyr::mutate(
    label_text = 
      paste(name, ", ",
            road_category_and_number, "<br/>",
            index_total_p, " %", "<br/>",
            index_total_coverage, " %"),
    label_text = lapply(label_text, htmltools::HTML))

# city_trps_new_pointindex_2 <-
#   city_trps_meta %>%
#   dplyr::left_join(
#     point_index_new_prepared_2,
#     by = "trp_id"
#   ) %>%
#   dplyr::mutate(
#     label_text =
#       paste(name, ", ",
#             road_category_and_number, "<br/>",
#             index_total_p, " %", "<br/>",
#             index_total_coverage, " %"),
#     label_text = lapply(label_text, htmltools::HTML))

# city_trps_new_pointindex_3 <- 
#   city_trps_meta %>% 
#   dplyr::left_join(
#     point_index_new_prepared_3,
#     by = "trp_id"
#   ) %>% 
#   dplyr::mutate(
#     label_text = 
#       paste(name, ", ",
#             road_category_and_number, "<br/>",
#             index_total_p, " %", "<br/>",
#             index_total_coverage, " %"),
#     label_text = lapply(label_text, htmltools::HTML))
# 
# city_trps_new_pointindex_4 <- 
#   city_trps_meta %>%
#   dplyr::left_join(
#     point_index_new_prepared_4,
#     by = "trp_id"
#   ) %>% 
#   dplyr::mutate(
#     label_text = 
#       paste(name, ", ",
#             road_category_and_number, "<br/>",
#             index_total_p, " %", "<br/>",
#             index_total_coverage, " %"),
#     label_text = lapply(label_text, htmltools::HTML))

# Widening for table view
pointindex_prepared_all_wide_total_index <- 
  pointindex_prepared_all %>% 
  dplyr::select(
    name, 
    road_reference, 
    adt, 
    month, 
    index_total_p
  ) %>% 
  tidyr::pivot_wider(
    names_from = month, 
    values_from = index_total_p,
    names_prefix = "m"
  ) %>% 
  dplyr::mutate(value_type = "index_total_p")

pointindex_prepared_all_wide_coverage <- 
  pointindex_prepared_all %>% 
  dplyr::select(
    name, 
    road_reference, 
    adt, 
    month, 
    index_total_coverage
  ) %>% 
  tidyr::pivot_wider(
    names_from = month, values_from = index_total_coverage,
    names_prefix = "m"
  ) %>% 
  dplyr::mutate(value_type = "index_total_coverage")

pointindex_wide <- 
  dplyr::bind_rows(
  pointindex_prepared_all_wide_total_index,
  pointindex_prepared_all_wide_coverage
  ) %>% 
  split_road_system_reference() %>% 
  dplyr::select(
    name, 
    road = road_category_and_number,
    adt:value_type
  ) |> 
  dplyr::mutate(
    dplyr::across(starts_with("m"), round)
  )
  #dplyr::arrange(road_reference)

# Longing :) for plot
pointindex_long <- 
  pointindex_prepared_all %>% 
  dplyr::select(trp_id:road_category_and_number) %>% 
  dplyr::mutate(
    month_object = lubridate::make_date(year = year, month = month),
    month_name = lubridate::month(month_object, label = TRUE, abbr = FALSE)
  )
```


## Indeks per måned så langt for `r city_name`

```{r}
#| label: city_index
#| message: false

month_start = lubridate::make_date(year = index_year, month = 1)
month_end = lubridate::make_date(year = index_year, month = 12)

full_year_x_axis <- c(month_start, month_end)

city_index_prepared %>% 
  ggplot2::ggplot(aes(x = month_object, y = index_p)) +
  ggplot2::geom_line() +
  ggplot2::geom_point(size = 4) +
  theme_light() +
  theme(
    axis.text.x = element_text(angle = 90),
    panel.grid.minor.x = element_blank(),
    legend.position = "bottom",
    plot.background = element_rect(fill = svv_background_color),
    panel.background = element_rect(fill = svv_background_color),
  ) +
  scale_x_date(
    breaks = scales::breaks_width("months"),
    labels = scales::label_date("%b"),
    limits = full_year_x_axis
  ) +
  scale_color_manual(values = c("alle" = "#008ec2",
                                "lette" = "#ed9300",
                                "tunge" = "#444f55"),
                     name = "Kjøretøyklasse"
  ) +
  labs(
    x = NULL, 
    y = "Endring i trafikkmengde (%) \n",
    caption = "Data: Statens vegvesen og fylkeskommunene"
  ) +
  ggtitle(
    "Estimert endring i trafikkmengde",
    subtitle = "Trafikkmengde i år sammenlignet med i fjor"
  )
```


## `r new_month_name`

```{r}
#| label: map_trp_index

city_trps_new_pointindex |> 
  dplyr::rename(
    index = index_total_p
  ) |> 
  dplyr::filter(
    !is.na(index)
  ) |> 
  map_pointindex()
```




```{r}
#| label: map_trp_index_2

# ## `r new_month_name_2` 

# city_trps_new_pointindex_2 |> 
#   dplyr::rename(
#     index = index_total_p
#   ) |> 
#   dplyr::filter(
#     !is.na(index)
#   ) |> 
#   map_pointindex()
```

```{r}
#| label: map_trp_index_3

# city_trps_new_pointindex_3 %>% 
#   dplyr::rename(index = index_total_p) %>% 
#   create_pointindex_map()
```

```{r}
#| label: map_trp_index_4

# city_trps_new_pointindex_4 %>%
#   dplyr::rename(index = index_total_p) %>%
#   create_pointindex_map()
```


## Månedlig tidslinje per punkt

```{r}
#| label: pointindex_sparkline
#| fig-height: 12
#| fig-width: 8

pointindex_plot <- 
  pointindex_prepared_all |> 
  ggplot2::ggplot(aes(x = month, y = index_total_p, color = name)) +
  geom_line() +
  geom_point() +
  scale_x_discrete(breaks = seq(1, index_month + 1, 1)) +
  theme_minimal() +
  theme(
    legend.position = "bottom",
    plot.background = element_rect(fill = svv_background_color),
    panel.background = element_rect(fill = svv_background_color)
  )

pointindex_plot %>% plotly::ggplotly(#width = 900, height = 700
  )
```


```{r}
#| label: point_plot
#| fig-width: 12

# point_number <-1
# trp_id_here <- city_trps_meta$trp_id[point_number]
# 
# trp_name <- city_trps_meta %>% 
#   dplyr::filter(trp_id == trp_id_here) %>% 
#   dplyr::select(name, road_reference) %>% 
#   stringr::str_glue_data("{name}, {road_reference}")
# 
# pointindex_long %>% 
#   dplyr::filter(trp_id == trp_id_here) %>% 
#   ggplot2::ggplot(aes(x = month_object, y = index_total_p)) +
#   ggplot2::geom_line() +
#   ggplot2::geom_point(aes(alpha = index_total_coverage), size = 4) +
#   theme_light() +
#   theme(axis.text.x = element_text(angle = 90),
#         panel.grid.minor.x = element_blank(),
#         legend.position = "bottom") +
#   scale_x_date(breaks = scales::breaks_width("months"),
#                labels = scales::label_date("%b")) +
#   scale_alpha(name = "Dekningsgrad") +
#   labs(x = NULL, y = "Endring i trafikkmengde (%) \n",
#        caption = "Data: Statens vegvesen") +
#   ggtitle(trp_name,
#           subtitle = "Trafikkmengde i år sammenlignet med i fjor")
```


## Spredning i punktindekser

```{r}
#| label: boxplot
#| fig-cap: "Punktindeksenes spredning."

pointindex_prepared_all |> 
  dplyr::filter(
    month > index_month
  ) |> 
  dplyr::mutate(
    month = factor(month)
  ) |> 
  ggplot(
    aes(
      month,
      index_total_p
    )
  ) +
  geom_boxplot() +
  theme_minimal() +
  theme(
    legend.position = "bottom",
    plot.background = element_rect(fill = svv_background_color),
    panel.background = element_rect(fill = svv_background_color)
  )
```

```{r}
#| label: histogram
#| fig-cap: "Punktindeksenes fordeling."

pointindex_prepared_all |> 
  dplyr::filter(
    month > index_month
  ) |> 
  dplyr::mutate(
    month = factor(month)
  ) |> 
  ggplot(
    aes(
      index_total_p
    )
  ) +
  geom_histogram() +
  facet_grid(
    month ~ .,
    scales = "free"
  ) +
  theme_minimal() +
  theme(
    legend.position = "bottom",
    plot.background = element_rect(fill = svv_background_color),
    panel.background = element_rect(fill = svv_background_color)
  )
```

## Månedlig tidsserie

```{r}
#| label: table_trp_consistency
#| tbl-cap: "Så langt i år."

pointindex_wide |> 
  DT::datatable(
    filter = "top",
    options = list(
      dom = "ftip",
      pageLength = 14,
      #lengthMenu = c(14, 28),
      autoWidth = TRUE))
```


```{r notes}
# Ekskluderinger:

```