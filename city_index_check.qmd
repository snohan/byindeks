---
title: "Sjekk av byindeks"
format: 
  html:
    css: svv.css
    number-sections: true
    toc: true
    toc-location: left
    toc-title: "Innhold"
    toc-expand: true
    df-print: paged
    self-contained: true
crossref:
  fig-title: Figur
  tbl-title: Tabell
  title-delim: .
  fig-prefix: figur
  tbl-prefix: tabell
editor: source
knitr: 
  opts_chunk: 
    echo: false
---


```{r}
#| label: setup
#| include: false
#| echo: false
#| warning: false
#| message: false
  
# Packages are loaded through sourcing rmd_setup.R
source("rmd_setup.R")

# Traffic Data API calls to get points metadata and aadt
source("get_from_trafficdata_api.R")
source("split_road_system_reference.R")
source("get_from_nvdb_api.R")
source("road_events_functions.R")
source("traffic_link_functions.R")

library(DT)
library(htmltools)

# NB! run once per session
#source("city_index_check_dataprep.R")

{
points <- readr::read_rds("trps_for_city_index.rds")
events <- readr::read_rds("events/events.rds")
# Traffic links from Adm ----
links <-
  sf::st_read("C:/Users/snohan/Desktop/traffic_links_2023_2024-08-06.geojson") |>
  dplyr::select(
    id,
    countyIds,
    associatedTrpIds,
    associatedTollStationIds
  )
}


# TODO: add toll stations to links
# notes
```


```{r}
#| label: get_data

# Look at details in one city at a time

# City numbers
# Refy City  Cnum  Chkd Resp
# 2016 Busk  1952   11 Snorre
# 2016 Gren   955   10 Snorre
# 2016 Kris   957   10 Snorre
# 2016 NGlo   953   11 Trond *
# 2023 NGlo 18952   11 Trond *
# 2022 Trom 16952   11 Snorre
# 2017 NJÃ¦r   952   11 Snorre
# 2018 Oslo   959   11 Trond *
# 2018 Berg  8952   11 Trond *
# 2019 Tron   960   11 Snorre


# TODO: look at normalized MDT visualized on links
# TODO: use graph centrality measures to evaluate changes in links and routings


# Choose
index_year <- 2024
latest_published_month <- 10
city_number <- 18952
# End choose

new_month_year <-
  dplyr::if_else(
    latest_published_month == 12,
    index_year + 1,
    index_year
  )

new_month_name <- 
  lubridate::as_date(paste0("2000-", (latest_published_month + 1) %% 12, "-01")) |> 
  lubridate::month(label = TRUE, abbr = FALSE) |> 
  stringr::str_to_title()

# new_month_name_2 <-
#   lubridate::as_date(paste0("2000-", (latest_published_month + 2) %% 12, "-01")) |>
#   lubridate::month(label = TRUE, abbr = FALSE) |>
#   stringr::str_to_title()

# new_month_name_3 <-
#   lubridate::as_date(paste0("2000-", (latest_published_month + 3) %% 12, "-01")) |>
#   lubridate::month(label = TRUE, abbr = FALSE) |>
#   stringr::str_to_title()

source("city_reference_year.R")

# previous_index_years <- 
#   if(index_year - reference_year == 1) {
#     NULL
#   }else{
#   base::seq(
#     reference_year + 1,
#     index_year - 1
#   )
#   }

# Fetch
# For TRD this is the unofficial
city_index <- 
  get_published_index_for_months(
    city_number, 
    index_year, 
    latest_published_month
  )

pointindex <- 
  get_published_pointindex_for_months(
    city_number, 
    index_year, 
    latest_published_month
  )

traffic_file <- paste0("city_report_files/trafikkforhold_", city_number, ".Rmd")
```


```{r}
#| label: trondheim

# NB! There are other parts of the code that is specific to TRD
# TRD toll station index

if(city_number == 960){
  
  trd_toll_stations_meta <-
    readr::read_rds(
      file = "bomdata_trondheim/trd_toll_stations.rds"
    ) |>
    split_road_system_reference() |>
    dplyr::select(
      trp_id,
      nvdb_id,
      name,
      road_reference,
      road_category_and_number,
      municipality_name,
      lat, lon,
      road_link_position
    ) |> 
    dplyr::mutate(
      trp_id = dplyr::case_when(
        trp_id == "1" ~ "72", # Ranheim
        TRUE ~ trp_id
      ),
      nvdb_id = as.character(nvdb_id)
    ) |> 
    dplyr::rename(
      autopass_id = trp_id,
      trp_id = nvdb_id
    )
  
  
  tolling_station_indices_prepared <-
    readr::read_rds(
      file = "H:/Programmering/R/byindeks/data_indexpoints_tidy/bom_maanedsindekser.rds",
    ) |>
    dplyr::mutate(
      year = lubridate::year(month_calc),
      month = lubridate::month(month_calc),
      class =
        dplyr::case_when(
          class == "alle" ~ "total_p",
          class == "lette" ~ "short",
          class == "tunge" ~ "long"
        ),
      index_p = round(index_p, digits = 1)
    ) |>
    dplyr::select(
      autopass_id = trp_id,
      year,
      month,
      class,
      index = index_p
    ) |>
    dplyr::filter(
      year == new_month_year
    ) |>
    tidyr::pivot_wider(
      names_from = class,
      names_prefix = "index_",
      values_from = index
    ) |> 
    dplyr::left_join(
      trd_toll_stations_meta |> 
        dplyr::select(
          autopass_id, trp_id
        ),
      by = join_by(autopass_id)
    ) |> 
    dplyr::select(
      -autopass_id
    ) |> 
    dplyr::relocate(
      trp_id
    )
  
  # For map
  tolling_station_indices_prepared_old <-
    tolling_station_indices_prepared |>
    dplyr::filter(
      month < (latest_published_month + 1) %% 12
      #latest_published_month + 1
    )
  
  tolling_station_indices_prepared_new <-
    tolling_station_indices_prepared |>
    dplyr::filter(
      month == (latest_published_month + 1) %% 12
      #latest_published_month + 1
    )
  
  # tolling_station_indices_prepared_new_2 <-
  #   tolling_station_indices_prepared |>
  #   dplyr::filter(
  #     month == (latest_published_month + 2) %% 12
  #   )

  # tolling_station_indices_prepared_new_3 <-
  #   tolling_station_indices_prepared |>
  #   dplyr::filter(
  #     month == (latest_published_month + 3) %% 12
  #   )
}
```


```{r}
#| label: city_trps

# All API PI (not old ones on CSV)
# former_pointindices <-
#   purrr::map_dfr(
#     previous_index_years,
#     ~ get_published_pointindex_for_months(city_number, .x, 12)[[2]]
#   )

city_trps <- pointindex[[1]]

# TRD: Removing Tungasletta Ystgaard
# NGL: Removing periodic Hauge bru (originally included by mistake)
city_trps <-
 city_trps[! city_trps %in% c("84826V42881", "98352V971490")]

pointindices <- pointindex[[2]]
city_name <- city_index$area_name[1]

# trps_meta <- 
#   points %>% 
#   dplyr::filter(trp_id %in% city_trps) |> 
#   # TRD
#   dplyr::bind_rows(
#     trd_toll_stations_meta
#   )

if(city_number == 960){
  
  trps_meta <- 
    points %>% 
    dplyr::filter(trp_id %in% city_trps) |> 
    # TRD
    dplyr::bind_rows(
      trd_toll_stations_meta
    )
  
}else{
  
  trps_meta <- 
    points %>% 
    dplyr::filter(trp_id %in% city_trps)
  
}

city_county_numbers <-
  dplyr::case_when(
    city_number %in% c(1952) ~ c(33),
    city_number %in% c(955) ~ c(40),
    city_number %in% c(957) ~ c(42),
    city_number %in% c(18952) ~ c(31),
    city_number %in% c(953) ~ c(31),
    city_number %in% c(16952) ~ c(55),
    city_number %in% c(952) ~ c(11),
    city_number %in% c(959) ~ c(3, 32),
    city_number %in% c(8952) ~ c(46),
    city_number %in% c(960) ~ c(50),
  )
```


```{r}
#| label: aadt


# Need not fetch AADT every time
if(F) {
  
  adt <- get_aadt_by_length_for_trp_list(city_trps)
  
  adt_reference_year <- 
    if(city_number == 16952) {
      2019
    }else{
      reference_year
    }
  
  adt_ref_year <- 
    adt |> 
    dplyr::filter(
      length_range == "[..,5.6)",
      #coverage > 50, # many from NorTraf
      year == adt_reference_year
    ) |> 
    dplyr::select(trp_id, adt_ref = aadt_length_range) |> 
    dplyr::mutate(
      adt_ref = round(adt_ref, -1)
    )
  
  if(city_number == 960){
    adt_ref_year_toll <-
      readr::read_rds(
        file = "data_indexpoints_tidy/trd_toll_aadt.rds"
      ) |> 
      dplyr::filter(
        year == 2019,
        class == "lette"
      ) |> 
      dplyr::select(trp_id, adt_ref = aadt) |> 
      dplyr::mutate(
        adt_ref = round(adt_ref, -1)
      )
  }
  
  adt_ref_year_all <-
    if(city_number == 960) {
      dplyr::bind_rows(
        adt_ref_year,
        adt_ref_year_toll
      )
    }else{
      adt_ref_year
    }
  
  adt_filtered <- 
    adt |> 
    dplyr::filter(length_range == "[..,5.6)") |> 
    #dplyr::mutate(length_quality = aadt_valid_length / aadt_total * 100) %>%
    #dplyr::filter(length_quality > 90) %>%
    dplyr::filter(coverage > 50) %>%
    dplyr::group_by(trp_id) %>%
    dplyr::filter(year == max(year)) %>%
    dplyr::select(trp_id, adt = aadt_length_range, year)
  
  this_citys_trps_all_adt <-
    trps_meta %>%
    dplyr::left_join(
      adt_filtered,
      by = "trp_id"
    )
  
  
  
  # Special
  # adt_light_years <-
  #   adt |> 
  #   tibble::as_tibble() |> 
  #   dplyr::filter(
  #     length_range == "[..,5.6)",
  #     year >= 2017
  #   ) |> 
  #   dplyr::select(
  #     trp_id,
  #     year,
  #     aadt = aadt_length_range
  #     #aadt_valid_length,
  #     #coverage
  #   ) |> 
  #   tidyr::pivot_wider(
  #     names_from = year,
  #     values_from = aadt
  #   ) |> 
  #   dplyr::left_join(
  #     trps_meta,
  #     by = "trp_id"
  #   ) |> 
  #   dplyr::select(
  #     name,
  #     road_reference,
  #     road_category_and_number,
  #     municipality_name,
  #     "2017":"2022"
  #   ) |> 
  #   dplyr::arrange(
  #     road_reference
  #   )
  # 
  # writexl::write_xlsx(
  #   adt_light_years,
  #   "spesialuttak/nedre_glomma_adt.xlsx"
  # )
  
  # adt_filtered <-
  #   adt %>%
  #   dplyr::filter(
  #     length_range %in% c("[..,5.6)", "[5.6,..)")
  #     ) %>%
  #   dplyr::mutate(
  #     length_quality = round(aadt_valid_length / aadt_total * 100)
  #   ) %>%
  #   #dplyr::filter(
  #   #  length_quality > 90
  #   #) %>%
  #   dplyr::filter(
  #     coverage > 50
  #   ) %>%
  #   dplyr::mutate(
  #     length_range =
  #       dplyr::case_when(
  #         length_range == "[..,5.6)" ~ "lette",
  #         length_range == "[5.6,..)" ~ "tunge",
  #         TRUE ~ length_range
  #       )
  #   ) %>%
  #   dplyr::select(
  #     trp_id,
  #     year,
  #     length_range,
  #     aadt_length_range,
  #     coverage,
  #     aadt_total,
  #     sd_total,
  #     length_quality
  #   ) %>%
  #   tidyr::pivot_wider(
  #     names_from = "length_range",
  #     names_prefix = "aadt_",
  #     values_from = "aadt_length_range"
  #   ) %>%
  #   dplyr::group_by(trp_id) %>%
  #   dplyr::filter(year == max(year)) %>%
  #   dplyr::select(
  #     trp_id,
  #     year,
  #     coverage,
  #     length_quality,
  #     aadt_total,
  #     aadt_lette,
  #     aadt_tunge
  #   )
  
  missing_adt <-
    this_citys_trps_all_adt %>%
    dplyr::filter(is.na(adt))
  
  
  if(nrow(missing_adt) == 0) {
    
    missing_adt_fixed <- data.frame()
    
  }else {
  
    fetch_adts <-
      purrr::map_dfr(
        missing_adt$road_link_position,
        ~ get_historic_aadt_by_roadlinkposition(
          roadlinkposition = .
        )
      ) |>
      dplyr::group_by(
        road_link_position
      ) |>
      dplyr::slice_max(
        year,
        with_ties = FALSE
      ) |>
      dplyr::mutate(
        adt = round(aadt_total * (1 - heavy_percentage / 100), digits = -1)
      ) |>
      dplyr::select(
        road_link_position,
        adt,
        year
      )
    
    missing_adt_fixed <-
      missing_adt |>
      dplyr::select(-adt, -year) |>
      dplyr::left_join(
        fetch_adts,
        by = "road_link_position"
      )
  }
  
  
  # Finally all aadt
  this_citys_trps_all_adt_final <-
    this_citys_trps_all_adt %>%
    dplyr::filter(!is.na(adt)) %>%
    dplyr::bind_rows(missing_adt_fixed) |> 
    dplyr::mutate(
      adt = round(adt, -1)
    ) |> 
    dplyr::rename(
      year_aadt = year
    ) |> 
    dplyr::left_join(
      adt_ref_year_all,
      by = join_by(trp_id)
    )
  
  if(city_number == 960){
  
    trd_station_type <-
      readr::read_rds(
        "trd_station_type.rds"
      )
    
    this_citys_trps_all_adt_final <-
      this_citys_trps_all_adt_final |> 
      # TRD (city_index_dataprep_trondheim_toll_stations.R)
      dplyr::left_join(
       trd_station_type,
       by = "trp_id"
      ) |>
      dplyr::mutate(
        station_type_short = stringr::str_sub(station_type, 1, 1)
      )
  }

  # TODO: add sections of TRPs
  
  readr::write_rds(
    this_citys_trps_all_adt_final,
    file = paste0(
      "index_trp_metadata/trp_",
      city_number,
      ".rds"
    )
  )
  
}else{
  
  this_citys_trps_all_adt_final <-
    readr::read_rds(
      file = paste0(
        "index_trp_metadata/trp_",
        city_number,
        ".rds"
      ) 
    )
}
```


```{r}
#| label: data_prep

# New month's pointindices
point_index_new <- 
  get_pointindices_for_trp_list(
    city_trps, 
    new_month_year
  )

# pi_2019 <-
#   get_pointindices_for_trp_list(
#     city_trps, 
#     index_year - 3
#   )
# 
# pi_trd <-
#   dplyr::bind_rows(
#     point_index_new,
#     pi_2021,
#     pi_2020,
#     pi_2019
#   ) |> 
#   dplyr::filter(
#     period == "year_to_date",
#     month == 12
#   ) |> 
#   dplyr::left_join(
#     trps_meta,
#     by = "trp_id"
#   ) |> 
#   dplyr::select(
#     trp_id,
#     name,
#     road_reference,
#     year,
#     month,
#     day_type,
#     index_total_p,
#     index_total_coverage,
#     length_excluded,
#     length_coverage,
#     index_short,
#     index_long
#   )
# 
# library(writexl)
# 
# writexl::write_xlsx(
#   pi_trd,
#   path = "punktindeks_trd.xlsx"
# )


city_index_prepared <- 
  city_index %>% 
  dplyr::filter(period == "month") %>% 
  dplyr::mutate(
    length_range = 
      dplyr::case_when(
        length_range == "[..,..)" ~ "alle",
        length_range == "[..,5.6)" ~ "lette",
        length_range == "[5.6,..)" ~ "tunge"
      )
  ) %>% 
  dplyr::mutate(
    road_category = 
      dplyr::case_when(
        road_category == "EUROPAVEG_RIKSVEG_FYLKESVEG_KOMMUNALVEG" ~ "Europa-, riks- og fylkesveg"
      )
  ) %>% 
  dplyr::mutate(
    index_lower = index_p - confidence_width,
    index_upper = index_p + confidence_width,
    month_object = lubridate::make_date(year = year, month = month),
    month_name = lubridate::month(month_object, label = TRUE, abbr = FALSE)
  ) %>% 
  dplyr::filter(road_category == "Europa-, riks- og fylkesveg")

pointindex_prepared <- 
  pointindices %>% 
  dplyr::filter(
    period == "month",
    is_excluded == FALSE,
    is_manually_excluded == FALSE
  ) %>% 
  dplyr::select(
    trp_id, 
    year, 
    month, 
    index_total_p,
    index_total_coverage, 
    length_excluded, 
    length_coverage,
    index_short, 
    index_long = length_index_long
  ) 

if(city_number == 960){
  
  pointindex_prepared <- 
    pointindex_prepared |> 
    # TRD
    dplyr::bind_rows(
     tolling_station_indices_prepared_old
    )
  
}

point_index_new_prepared_1 <- 
  point_index_new %>% 
  dplyr::filter(
    day_type == "ALL",
    period == "month",
    month == (latest_published_month + 1) %% 12
  ) %>% 
  dplyr::select(
    trp_id, 
    year, 
    month, 
    index_total_p,
    index_total_coverage, 
    length_excluded, 
    length_coverage,
    index_short, 
    index_long
  )

if(city_number == 960){
  
  point_index_new_prepared_1 <- 
    point_index_new_prepared_1 |> 
    # TRD
    dplyr::bind_rows(
     tolling_station_indices_prepared_new
    )
  
}

# point_index_new_prepared_2 <-
#   point_index_new %>%
#   dplyr::filter(
#     day_type == "ALL",
#     period == "month",
#     month == latest_published_month + 2
#   ) %>%
#   dplyr::select(
#     trp_id,
#     year,
#     month,
#     index_total_p,
#     index_total_coverage,
#     length_excluded,
#     length_coverage,
#     index_short,
#     index_long
#   )
# 
# if(city_number == 960){
# 
#   point_index_new_prepared_2 <-
#     point_index_new_prepared_2 |>
#     # TRD
#     dplyr::bind_rows(
#      tolling_station_indices_prepared_new_2
#     )
# 
# }

# point_index_new_prepared_3 <-
#   point_index_new %>%
#   dplyr::filter(
#     day_type == "ALL",
#     period == "month",
#     month == latest_published_month + 3
#   ) %>%
#   dplyr::select(
#     trp_id,
#     year,
#     month,
#     index_total_p,
#     index_total_coverage,
#     length_excluded,
#     length_coverage,
#     index_short,
#     index_long
#   )
# 
# if(city_number == 960){
#   
#   point_index_new_prepared_3 <- 
#     point_index_new_prepared_3 |> 
#     # TRD
#     dplyr::bind_rows(
#      tolling_station_indices_prepared_new_3
#     )
#   
# }

pointindex_prepared_all <- 
  dplyr::bind_rows(
    pointindex_prepared,
    point_index_new_prepared_1,
    #point_index_new_prepared_2,
    #point_index_new_prepared_3,
    #point_index_new_prepared_4#,
    #point_index_new_prepared_5
  ) %>% 
  dplyr::filter(
    year == new_month_year
  ) |> 
  #dplyr::left_join(trps_meta) %>% 
  #dplyr::left_join(adt_filtered) %>% 
  dplyr::left_join(
    this_citys_trps_all_adt_final,
    by = "trp_id"
  ) %>% 
  dplyr::mutate(
    short_is_least = index_short < index_long,
    short_is_least_check = index_total_p >= index_short & index_total_p <= index_long,
    long_is_least_check = index_total_p >= index_long & index_total_p <= index_short,
    #short_is_least_check = dplyr::between(index_total_p, index_short, index_long),
    #long_is_least_check = dplyr::between(index_total_p, index_long, index_short),
    total_short_long_check = dplyr::case_when(
      short_is_least & short_is_least_check ~ 0, #"ok",
      short_is_least & !short_is_least_check ~ 1, #"not ok",
      !short_is_least & long_is_least_check ~ 0, #"ok",
      !short_is_least & !long_is_least_check ~ 1, #"not ok",
      ),
    diff_total_short = round(index_short - index_total_p, digits = 1)
  )
     
# For map
# TODO: add point features for point indexes on municipality roads
# Important for TRD, OSL, TRS, KRS (next version)
city_trps_new_pointindex <- 
  trps_meta %>% 
  dplyr::left_join(
    point_index_new_prepared_1,
    by = "trp_id"
  ) %>% 
  dplyr::mutate(
    label_text = 
      paste(name, ", ",
            road_category_and_number, "<br/>",
            index_total_p, " %", "<br/>",
            index_total_coverage, " %"),
    label_text = lapply(label_text, htmltools::HTML)
  )

# city_trps_new_pointindex_2 <-
#   trps_meta %>%
#   dplyr::left_join(
#     point_index_new_prepared_2,
#     by = "trp_id"
#   ) %>%
#   dplyr::mutate(
#     label_text =
#       paste(name, ", ",
#             road_category_and_number, "<br/>",
#             index_total_p, " %", "<br/>",
#             index_total_coverage, " %"),
#     label_text = lapply(label_text, htmltools::HTML))

# city_trps_new_pointindex_3 <- 
#   trps_meta %>%
#   dplyr::left_join(
#     point_index_new_prepared_3,
#       by = "trp_id"
#   ) %>%
#   dplyr::mutate(
#     label_text =
#       paste(name, ", ",
#             road_category_and_number, "<br/>",
#             index_total_p, " %", "<br/>",
#             index_total_coverage, " %"),
#     label_text = lapply(label_text, htmltools::HTML))
# 
# city_trps_new_pointindex_4 <- trps_meta %>%
#   dplyr::left_join(
#     point_index_new_prepared_4,
#       by = "trp_id"
#   ) %>%
#   dplyr::mutate(
#     label_text =
#       paste(name, ", ",
#             road_category_and_number, "<br/>",
#             index_total_p, " %", "<br/>",
#             index_total_coverage, " %"),
#     label_text = lapply(label_text, htmltools::HTML))

# city_trps_new_pointindex_5 <- trps_meta %>% 
#   dplyr::left_join(point_index_new_prepared_5)

# Widening for table view
pointindex_prepared_all_wide_total_index <- 
  pointindex_prepared_all %>% 
  dplyr::select(
    name, 
    road_category_and_number, 
    adt, 
    month, 
    index_total_p
  ) %>% 
  tidyr::pivot_wider(
    names_from = month, 
    values_from = index_total_p,
    names_prefix = "m"
  ) %>% 
  dplyr::mutate(value_type = "index_total_p")

pointindex_prepared_all_wide_coverage <- 
  pointindex_prepared_all %>% 
  dplyr::select(name, road_category_and_number, adt, month, index_total_coverage) %>% 
  tidyr::pivot_wider(names_from = month, values_from = index_total_coverage,
                     names_prefix = "m") %>% 
  dplyr::mutate(value_type = "index_total_coverage")

pointindex_prepared_all_wide_length_coverage <- 
  pointindex_prepared_all %>% 
  dplyr::select(name, road_category_and_number, adt, month, length_coverage) %>% 
  tidyr::pivot_wider(names_from = month, values_from = length_coverage,
                     names_prefix = "m") %>% 
  dplyr::mutate(value_type = "length_coverage")

pointindex_prepared_all_wide_short <- 
  pointindex_prepared_all %>% 
  dplyr::select(name, road_category_and_number, adt, month, index_short) %>% 
  tidyr::pivot_wider(names_from = month, values_from = index_short,
                     names_prefix = "m") %>% 
  dplyr::mutate(value_type = "index_short")

pointindex_prepared_all_wide_long <- 
  pointindex_prepared_all %>% 
  dplyr::select(name, road_category_and_number, adt, month, index_long) %>% 
  tidyr::pivot_wider(names_from = month, values_from = index_long,
                     names_prefix = "m") %>% 
  dplyr::mutate(value_type = "index_long")

pointindex_prepared_all_wide_check <- 
  pointindex_prepared_all %>% 
  dplyr::select(name, road_category_and_number, adt, month, total_short_long_check) %>% 
  tidyr::pivot_wider(names_from = month, values_from = total_short_long_check,
                     names_prefix = "m") %>% 
  dplyr::mutate(value_type = "total_short_long_check")

pointindex_prepared_all_wide_diff <- 
  pointindex_prepared_all %>% 
  dplyr::select(name, road_category_and_number, adt, month, diff_total_short) %>% 
  tidyr::pivot_wider(names_from = month, values_from = diff_total_short,
                     names_prefix = "m") %>% 
  dplyr::mutate(value_type = "diff_total_short")

pointindex_wide <- 
  dplyr::bind_rows(
    pointindex_prepared_all_wide_total_index,
    pointindex_prepared_all_wide_coverage,
    pointindex_prepared_all_wide_length_coverage,
    pointindex_prepared_all_wide_short,
    pointindex_prepared_all_wide_long,
    pointindex_prepared_all_wide_check,
    pointindex_prepared_all_wide_diff
  ) |> 
  # split_road_system_reference() %>% 
  dplyr::rename(
    road = road_category_and_number,
  ) |> 
  dplyr::arrange(name)

# Longing :) for plot
pointindex_long <- 
  pointindex_prepared_all %>% 
  dplyr::select(trp_id:road_category_and_number)

pointindex_long_total <- 
  pointindex_long %>% 
  dplyr::select(
    trp_id, 
    year, 
    month, 
    index = index_total_p, 
    coverage = index_total_coverage,
    length_excluded, 
    name, 
    road_category_and_number
  ) %>% 
  dplyr::mutate(length_range = "total")

pointindex_long_short <- 
  pointindex_long %>% 
  dplyr::select(
    trp_id, 
    year, 
    month, 
    index_short, 
    index_long, 
    coverage = length_coverage, 
    length_excluded, 
    name, 
    road_category_and_number
  ) %>% 
  tidyr::pivot_longer(
    cols = c("index_short", "index_long"), 
    names_to = "length_range",
    values_to = "index"
  )

pointindex_long_2 <- 
  dplyr::bind_rows(
    pointindex_long_total,
    pointindex_long_short
  ) %>% 
  dplyr::mutate(
    length_range = 
      dplyr::case_when(
        length_range == "total" ~ "alle",
        length_range == "index_short" ~ "lette",
        length_range == "index_long" ~ "tunge"
      )
  ) %>% 
  dplyr::mutate(
    month_object = lubridate::make_date(year = year, month = month),
    month_name = lubridate::month(month_object, label = TRUE, abbr = FALSE)
  )


# Links
links_in_county <- filter_traffic_links_by_county(city_county_numbers)
links_with_trp <- filter_links_with_trp()

links_with_events_and_pointindex_1 <- join_events_and_trp_index_with_links(5, point_index_new_prepared_1)
leftover_trp_index_1 <-
  city_trps_new_pointindex |> 
  dplyr::filter(
    !(trp_id %in% links_with_events_and_pointindex_1$this_area_trp_id)
  )

# links_with_events_and_pointindex_2 <- join_events_and_trp_index_with_links(6, point_index_new_prepared_2)
# leftover_trp_index_2 <-
#   city_trps_new_pointindex |>
#   dplyr::filter(
#     !(trp_id %in% links_with_events_and_pointindex_2$this_area_trp_id)
#   )

# links_with_events_and_pointindex_3 <- join_events_and_trp_index_with_links(7, point_index_new_prepared_3)
# leftover_trp_index_3 <-
#   city_trps_new_pointindex |> 
#   dplyr::filter(
#     !(trp_id %in% links_with_events_and_pointindex_3$this_area_trp_id)
#   )

```


## Byindeks per mÃ¥ned sÃ¥ langt for `r city_name`

```{r}
#| label: city_index

month_start = lubridate::make_date(year = 2024, month = 1)
month_end = lubridate::make_date(year = 2024, month = 12)

full_year_x_axis <- c(month_start, month_end)

city_index_prepared |> 
  ggplot2::ggplot(aes(x = month_object, y = index_p, color = length_range)) +
  ggplot2::geom_line() +
  ggplot2::geom_point(size = 4) +
  theme_light() +
  theme(
    axis.text.x = element_text(angle = 90),
    panel.grid.minor.x = element_blank(),
    legend.position = "bottom",
    legend.key = element_blank(),
    legend.background = element_rect(fill = svv_background_color),
    plot.background = element_rect(fill = svv_background_color),
    panel.background = element_rect(fill = svv_background_color)
  ) +
  facet_wrap(
    ~ day_type,
    ncol = 1
  ) +
  scale_x_date(
    breaks = scales::breaks_width("months"),
    labels = scales::label_date("%b"),
    limits = full_year_x_axis
  ) +
  scale_color_manual(
    values = c("alle" = "#008ec2",
               "lette" = "#ed9300",
               "tunge" = "#444f55"),
     name = "KjÃ¸retÃ¸yklasse"
  ) +
  labs(
    x = NULL, 
    y = "Endring i trafikkmengde (%) \n",
    caption = "Data: Statens vegvesen og fylkeskommunene"
  ) +
  ggtitle(
    "Estimert endring i trafikkmengde",
    subtitle = "Trafikkmengde i Ã¥r sammenlignet med i fjor"
  )
```


## `r new_month_name`

```{r}
#| label: map_linkindex_and_events
#| message: false

links_with_events_and_pointindex_1 |> 
  map_pointindex_and_events()
```


```{r}
#| label: map_trp_index_1

if(nrow(leftover_trp_index_1) != 0){
  
 leftover_trp_index_1 |> 
  dplyr::rename(index = index_total_p) |> 
  create_pointindex_map() 
}
```




```{r}
#| label: map_linkindex_and_events_2
#| message: false

# ## `r new_month_name_2`
# links_with_events_and_pointindex_2 |> 
#   map_pointindex_and_events()
```

```{r}
#| label: map_trp_index_2

# leftover_trp_index_2 |>
#   dplyr::rename(index = index_total_p) |>
#   create_pointindex_map()
```



```{r}
#| label: map_linkindex_and_events_3
#| message: false

## `r new_month_name_3`
# links_with_events_and_pointindex_3 |> 
#   map_pointindex_and_events()
```

```{r}
#| label: map_trp_index_3

# leftover_trp_index_3 |> 
#   dplyr::rename(index = index_total_p) |> 
#   create_pointindex_map()
```


## Kurver per punkt for totaltrafikk

```{r}
#| label: pointindex_sparkline

pointindex_plot <- 
  pointindex_prepared_all |> 
  ggplot2::ggplot(aes(x = month, y = index_total_p, color = name)) +
  geom_line() +
  scale_x_discrete(breaks = seq(1, latest_published_month + 1, 1)) +
  theme_minimal() +
    theme(
    legend.position = "bottom",
    plot.background = element_rect(fill = svv_background_color),
    panel.background = element_rect(fill = svv_background_color)
  )

pointindex_plot |> 
  plotly::ggplotly(
    #width = 900, height = 700
  )
```



```{r}
#| label: point_plot
#| fig-width: 12

# point_number <- 1
# trp_id_here <- trps_meta$trp_id[point_number]
# 
# trp_name <- trps_meta %>% 
#   dplyr::filter(trp_id == trp_id_here) %>% 
#   dplyr::select(name, road_category_and_number) %>% 
#   stringr::str_glue_data("{name}, {road_category_and_number}")
# 
# pointindex_long_2 %>% 
#   dplyr::filter(trp_id == trp_id_here) %>% 
#   ggplot2::ggplot(aes(x = month_object, y = index, color = length_range)) +
#   ggplot2::geom_line() +
#   ggplot2::geom_point(aes(alpha = coverage), size = 4) +
#   theme_light() +
#   theme(axis.text.x = element_text(angle = 90),
#         panel.grid.minor.x = element_blank(),
#         legend.position = "bottom") +
#   scale_x_date(breaks = scales::breaks_width("months"),
#                labels = scales::label_date("%b")) +
#   scale_color_manual(values = c("alle" = "#008ec2",
#                                 "lette" = "#ed9300",
#                                 "tunge" = "#444f55"),
#                      name = "KjÃ¸retÃ¸yklasse") +
#   scale_alpha(name = "Dekningsgrad") +
#   labs(x = NULL, y = "Endring i trafikkmengde (%) \n",
#        caption = "Data: Statens vegvesen") +
#   ggtitle(trp_name,
#           subtitle = "Trafikkmengde i Ã¥r sammenlignet med i fjor")
```



## Spredning i punktindekser

```{r}
#| label: boxplot
#| fig-cap: "Punktindeksenes spredning."

pointindex_prepared_all |> 
  dplyr::filter(
    month > latest_published_month
  ) |> 
  dplyr::mutate(
    month = factor(month)
  ) |> 
  ggplot(
    aes(
      month,
      index_total_p
    )
  ) +
  geom_boxplot() +
  theme_minimal() +
  theme(
    legend.position = "bottom",
    plot.background = element_rect(fill = svv_background_color),
    panel.background = element_rect(fill = svv_background_color)
  )
```

```{r}
#| label: histogram
#| fig-cap: "Punktindeksenes fordeling."

pointindex_prepared_all |> 
  dplyr::filter(
    month > latest_published_month
  ) |> 
  dplyr::mutate(
    month = factor(month)
  ) |> 
  ggplot(
    aes(
      index_total_p
    )
  ) +
  geom_histogram() +
  facet_wrap(
    ggplot2::vars(month),
    dir = "v",
    scales = "free"
  ) +
  theme_minimal() +
  theme(
    legend.position = "bottom",
    plot.background = element_rect(fill = svv_background_color),
    panel.background = element_rect(fill = svv_background_color)
  )
```


## MÃ¥nedlig tidsserie

```{r}
#| label: table_trp_consistency
#| tbl-cap: "SÃ¥ langt i Ã¥r."

pointindex_wide |> 
  DT::datatable(
    filter = "top",
    rownames = FALSE,
    options = list(
      dom = "ftip",
      pageLength = 14,
      #lengthMenu = c(14, 28),
      autoWidth = TRUE))
```


{{< include city_report_files/_traffic.Rmd >}}


```{r notes}
# Ekskluderinger:

# NGL
# St. Hansfjellet 10
# TODO: length quality 10
# TODO: MDTs and Excel file


# 
```